[{"categories":["树莓派"],"content":"操作步骤 搭建环境 (虚拟机系统第一次安装才需要，后面不需要这一步) sudo apt update sudo apt upgrade sudo apt install git sudo git clone https://github.com/Drewsif/PiShrink.git 在vmware上设置虚拟机和本地电脑共享目录，本次设置为/mnt/hgfs/Downloads 也就是将文件放在本地电脑的下载目录下，虚拟机里在目录/mnt/hgfs/Downloads中就可以看到文件 sudo cp PiShrink/pishrink.sh /mnt/hgfs/Download cd /mnt/hgfs/Download sudo chmod 777 pishrink.sh 读取并压缩镜像 在本地电脑桌面新建一个文本文档，修改名称为backup.img（名字可以随意） 打开win32disk imager , 选择档案为backup.img ，设备选择树莓派的sd卡， 点击读取，等待读取完成 将完成的backup.img 复制到本地电脑的下载目录里 回到虚拟机这边 cd /mnt/hgfs/Download sudo ./pishrink.sh backup.img backup_v2.img 等待完成即可，然后在本地下载目录里找到backup_v2.img 将它烧录到新卡，插上树莓派开机查看是否正常 注意，第一步是全新虚拟机环境才需要执行，之后需要备份的话，只用按照第二步里面操作即可！！ ","date":"2024-05-07","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A4%87%E4%BB%BD%E9%95%9C%E5%83%8F%E6%9E%81%E7%AE%80%E6%93%8D%E4%BD%9C%E7%89%88/:0:1","tags":["树莓派备份"],"title":"树莓派备份镜像极简操作版","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A4%87%E4%BB%BD%E9%95%9C%E5%83%8F%E6%9E%81%E7%AE%80%E6%93%8D%E4%BD%9C%E7%89%88/"},{"categories":["玩客云","Klipper"],"content":"参考链接 引用\rhttp://mirrors.aliyun.com/debian/dists/?spm=a2c6h.25603864.0.0.142f29e8Iss3Uu https://blog.csdn.net/jamesdodo/article/details/106073576 ","date":"2024-04-19","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/:0:1","tags":["3d打印机"],"title":"玩客云刷Armbian安装klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/"},{"categories":["玩客云","Klipper"],"content":"资料下载 先点击下面链接，下载好镜像文件和工具备用，需要公对公的usb数据线，8G或以上的u盘 玩客云Armbian_20.11_Aml-s81...-支持USB-WIFI最终完美版.7z https://www.alipan.com/s/6XY3VCGQf1F 提取码: 6ji5 ","date":"2024-04-19","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/:0:2","tags":["3d打印机"],"title":"玩客云刷Armbian安装klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/"},{"categories":["玩客云","Klipper"],"content":"操作步骤 刷写系统 玩客云有1.1和1.3两个版本的固件，刷写时需要短接板子上的触点才能进入下载模式，触点位置请自行百度。 打开Aml_Burn_Tool选择首选底包.img，然后点击开始按钮，用数据线连接电脑和板子靠近hdmi口的usb，短接板子触点，给板子上电，这时会自动开始刷写，如果没反应就需要重新短接并上电，多试几次就可以，等待几分钟后刷写完成。 使用镜像烧录工具(如etcher或win32disk)，插上u盘，将wanke-emmc.img文件刷进u盘里，然后将u盘插到板子靠近网口的usb，等待灯停止闪烁变为蓝灯，整个过程大概五分钟。 拔下u盘，插到电脑继续烧写镜像文件：新老版本玩客云双usb口都可用Armbian_20.11_Aml-s812_5.9.0-支持USB-WIFI最终完美版.img到U盘上。之后将U盘插到板子靠近网口的usb，给板子上电。 用板子的hdmi连接屏幕插上键盘操作，或把板子用网线插到路由器上，使用ssh登录，板子在路由器后台的主机名称为arm 此时进入系统，用户名：root，密码：1234 使用以下指令安装系统： cd /boot/install ./install.sh 等待系统重启即可拔掉u盘 后续系统如果崩溃了，可以使用第三步重新刷写系统，不需要从第一步重新开始刷。 换源 由于本系统为20版本也就是debian的buster分支，很多源已经地址失效，我也是折腾很久才知道要这样换的。 替换sources.list内容 使用以下指令： sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak sudo nano /etc/apt/sources.list 在打开的文件中黏贴以下内容并保存。 #deb http://mirrors.aliyun.com/debian buster main contrib non-free #deb http://mirrors.aliyun.com/debian buster-updates main contrib non-free #deb http://mirrors.aliyun.com/debian buster-backports main contrib non-free #deb http://mirrors.aliyun.com/debian buster/updates main contrib non-free deb http://mirrors.aliyun.com/debian/ buster main non-free contrib #deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib deb http://mirrors.aliyun.com/debian-security buster/updates main #deb-src http://mirrors.aliyun.com/debian-security buster/updates main deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib #deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib deb http://mirrors.aliyun.com/debian/ oldstable-backports main non-free contrib #deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib 替换armbian.list内容 使用以下指令： sudo mv /etc/apt/sources.list.d/armbian.list /etc/apt/sources.list.d/armbian.list.bak sudo nano /etc/apt/sources.list.d/armbian.list 在打开的文件中黏贴以下内容并保存。 #deb http://apt.armbian.com buster main buster-utils buster-desktop deb http://mirrors.aliyun.com/debian buster main buster-utils buster-desktop #deb [trusted=yes] http://mirrors.tuna.tsinghua.edu.cn/armbian buster main buster-utils buster-desktop 使用更新命令更新系统 sudo apt update sudo apt upgrade 安装相关依赖 先创建一个klipper用户并切换到klipper用户 sudo adduser klipper （sudo userdel -r username） sudo usermod -a -G adm klipper sudo usermod -a -G sudo klipper sudo gpasswd --add klipper dialout su - klipper 安装相关依赖软件包 sudo apt-get install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev git tree 安装python3.8 由于本系统自带的是python3.7，安装klipper时候会显示版本过低，所以这里需要手动升级一下python版本 操作如下： wget https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz 或 wget https://www.python.org/ftp/python/3.11.9/Python-3.11.9.tgz sudo tar -zxvf Python-3.8.5.tgz cd Python-3.8.5 sudo ./configure --prefix=/usr/local/python3 \u0026\u0026 sudo make \u0026\u0026 sudo make install sudo ln -s /usr/local/python3/bin/python3 /usr/local/bin/python3 sudo ln -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3 手动编译安装python库文件 安装klipper时候会提示缺少zlib导致无法安装pillow，这里先手动安装一下 操作步骤如下： wget http://www.zlib.net/zlib-1.3.1.tar.gz wget http://ijg.org/files/jpegsrc.v9e.tar.gz tar -zxvf zlib-1.3.1.tar.gz tar -zxvf jpegsrc.v9e.tar.gz 之后分别进入目录，编译安装即可 sudo ./configure \u0026\u0026 sudo make \u0026\u0026 sudo make install pip换源 由于pip工具默认使用国外的地址，网络不好会导致安装klipper失败，所以需要先换源。 操作如下： pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 安装klipper 接下来的klipper安装就和普通的没啥区别了，我这里不多赘述 操作如下： git clone https://gitee.com/miroky/kiauh.git cd kiauh ./kiauh 部分操作指令 查看端口 ls /dev/serial/by-id/* 连接wifi nmtui-connect ","date":"2024-04-19","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/:0:3","tags":["3d打印机"],"title":"玩客云刷Armbian安装klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/"},{"categories":["玩客云","Klipper"],"content":"总结 本文主要记录了使用玩客云作为3d打印机klipper固件的上位机操作，会遇到比较多的坑，故在此做下记录，后续可以参考，不必再次重新摸索。 ","date":"2024-04-19","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/:0:4","tags":["3d打印机"],"title":"玩客云刷Armbian安装klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7armbian%E5%AE%89%E8%A3%85klipper/"},{"categories":["Klipper","3d打印机"],"content":"前言 摘要\r新组装的打印机可以通过局域网内浏览器进行控制打印， 但还是需要一块小屏幕展示打印进度，才不用每次都打开手机或者电脑才能查看。 之前用mks的mini12864屏幕还不错，但是手里刚好有一块0.96的六线spi协议oled屏幕， 于是想着能不能低成本不掏钱就实现这个需求。 参考链接： https://mellow.klipper.cn/?lang=en#/board/fly_d5/pins?id=_1-fly-d5-pin%e8%84%9a%e8%af%b4%e6%98%8e https://ixixix.cn/v0display/ ","date":"2024-04-01","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper%E5%AE%89%E8%A3%850.96oled%E5%B1%8F%E5%B9%95/:0:1","tags":["3d打印机","oled"],"title":"Klipper安装0.96OLED屏幕","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper%E5%AE%89%E8%A3%850.96oled%E5%B1%8F%E5%B9%95/"},{"categories":["Klipper","3d打印机"],"content":"操作步骤 焊接好屏幕的排针，用杜邦线连接好备用 打开打印机klipper的printer.cfg配置文件，修改如下： （我的主板是fly D5，请根据你自己的主板型号修改脚位） [display] lcd_type: ssd1306 cs_pin: PA9 #显示屏不需要片选引脚，但不填会报错！ #可以任意使用一个没有用上的pin脚 #例如SKR Mini E3可以使用3Dtouch的PA1 dc_pin: PA13 reset_pin: PA14 spi_software_mosi_pin: PC10 spi_software_sclk_pin: PC11 contrast: 255 vcomh: 0 invert: False #x_offset: 2 ## Some micro-controller boards may require an spi bus to be specified: #spi_bus: spi ## Alternatively, some micro-controller boards may work with software spi: spi_software_miso_pin: PA15 #显示屏不需要从机向主机通讯，但不填会报错！ #可以任意使用一个没有用上的pin脚 #例如SKR Mini E3可以使用3Dtouch的PC14 将oled的杜邦线连接到步骤2中设置的主板管脚上，重启klipper即可 实现效果如下： 实现效果\r","date":"2024-04-01","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper%E5%AE%89%E8%A3%850.96oled%E5%B1%8F%E5%B9%95/:0:2","tags":["3d打印机","oled"],"title":"Klipper安装0.96OLED屏幕","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper%E5%AE%89%E8%A3%850.96oled%E5%B1%8F%E5%B9%95/"},{"categories":["Klipper","3d打印机"],"content":"参考链接 引用\r本文主要针对没有配置自动调平工具的3d打印机，配置网床补偿以达到完美打印首层的目的 https://www.bilibili.com/video/BV1ao4y1j7uy 参考视频来自B站up主： 三十而肥2017 ","date":"2024-03-28","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper%E9%85%8D%E7%BD%AE%E7%BD%91%E5%BA%8A%E8%A1%A5%E5%81%BF%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E9%A6%96%E5%B1%82%E6%89%93%E5%8D%B0/:0:1","tags":["3d打印网床补偿"],"title":"Klipper配置网床补偿实现完美首层打印","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper%E9%85%8D%E7%BD%AE%E7%BD%91%E5%BA%8A%E8%A1%A5%E5%81%BF%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E9%A6%96%E5%B1%82%E6%89%93%E5%8D%B0/"},{"categories":["Klipper","3d打印机"],"content":"操作步骤 启用网床补偿： 针对有无在切片软件中设置自定义gcode代码有两个设置方式， 根据在自身情况选择1）或者2）即可 1）在printer.cfg的[gcode_macro START_PRINT]或[gcode_macro PRINT_START]中添加一行参数： BED_MESH_PROFILE LOAD=default 2）在切片软件的自定义起始gcode中添加一行代码如下： BED_MESH_PROFILE LOAD=default 设置网床补偿手动调整参数 在printer.cfg中针对[bed_mesh]配置如下： 我这里热床是150*150的，所以校准开始点设置为坐标(10,10)，结束点设置为(140,140)，采样点数设置为4x4一共十六个点的采样矩阵，请根据自身情况修改。 [bed_mesh] speed: 100 horizontal_move_z: 5 mesh_min: 10, 10 # 最小校准点坐标x，y mesh_max: 140, 140 # 最大校准点坐标x，y probe_count: 4, 4 # 采样点数（4X4为16点） fade_start: 1 # 网床补偿开始层，单位：mm fade_end: 10 # 网床补偿结束层，单位：mm fade_target: 0 修改Z轴参数 需要修改的Z轴参数如下： position_endstop: 0.12 # 设置Z轴偏移，防止喷嘴过度靠近热床，值需要根据打印测试修改 position_min: -5 # 主要用于校准时移动Z轴不报错，一般设置-5即可 校准网床生成参数 在klipper主页面的调整选项中，先选择全部轴归零，然后点击校准，返回klipper主页的控制台中，可以看到显示了TESTZ的相关提示。 输入TESTZ Z=-5，打印头会接近热床，接着使用TESTZ Z=0.05一点点使远离喷嘴远离热床，直到可以容纳下一张A4纸的厚度，输入ACCEPT保存该点的设置。以此类推，校准每个点，最后输入SAVE_CONFIG保存设置。 注意，新版本的klipper可能不会自动保存我们校准玩的参数，所以需要打开printer.cfg文件，手动取消注释，类似下面的代码，然后点击 保存并重启。 [bed_mesh default] version = 1 points = 0.200000, 0.230000, 0.170000, 0.140000 0.130000, 0.190000, 0.120000, 0.070000 0.160000, 0.185000, 0.150000, 0.075000 0.135000, 0.210000, 0.140000, 0.040000 x_count = 4 y_count = 4 mesh_x_pps = 2 mesh_y_pps = 2 algo = lagrange tension = 0.2 min_x = 10.0 max_x = 139.99 min_y = 10.0 max_y = 139.99 ","date":"2024-03-28","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper%E9%85%8D%E7%BD%AE%E7%BD%91%E5%BA%8A%E8%A1%A5%E5%81%BF%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E9%A6%96%E5%B1%82%E6%89%93%E5%8D%B0/:0:2","tags":["3d打印网床补偿"],"title":"Klipper配置网床补偿实现完美首层打印","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper%E9%85%8D%E7%BD%AE%E7%BD%91%E5%BA%8A%E8%A1%A5%E5%81%BF%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E9%A6%96%E5%B1%82%E6%89%93%E5%8D%B0/"},{"categories":["ender3","3d打印机","Klipper"],"content":"参考链接 引用\r本文主要针对创想三维的ender3-v2-2020机型，主板型号4.4.2，主控GD32F303 其他ender3的型号可以参照以下链接进行烧写和配置： https://github.com/Klipper3d/klipper/blob/master/config ","date":"2024-03-27","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%88%9B%E6%83%B3%E4%B8%89%E7%BB%B4ender%E5%88%B7klipper%E4%B8%8B%E4%BD%8D%E6%9C%BA/:0:1","tags":["3d打印机"],"title":"创想三维ender刷klipper下位机","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%88%9B%E6%83%B3%E4%B8%89%E7%BB%B4ender%E5%88%B7klipper%E4%B8%8B%E4%BD%8D%E6%9C%BA/"},{"categories":["ender3","3d打印机","Klipper"],"content":"操作如下 准备一张内存卡，插到电脑 用各种派或者玩客云当作上位机，在上位机上安装好klipper 在上位机使用klipper编译下位机固件，GD32F303或STM32F103都可以使用以下编译参数： 主控选择： STM32F103 寄存器选择： \"28KiB bootloader\" 串口通信方式选择： serial (on USART1 PA10/PA9) 将编译生成klipper.bin固件拷贝到内存卡中 ender3断电，将内存卡插到ender3上，重新上电开机即可 在浏览器登录klipper页面，配置printer.cfg如下： # This file contains pin mappings for the stock 2020 Creality Ender 3 # V2. To use this config, during \"make menuconfig\" select the # STM32F103 with a \"28KiB bootloader\" and serial (on USART1 PA10/PA9) # communication. # If you prefer a direct serial connection, in \"make menuconfig\" # select \"Enable extra low-level configuration options\" and select # serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC # cable used for the LCD module as follows: # 3: Tx, 4: Rx, 9: GND, 10: VCC # Flash this firmware by copying \"out/klipper.bin\" to a SD card and # turning on the printer with the card inserted. The firmware # filename must end in \".bin\" and must not match the last filename # that was flashed. # See docs/Config_Reference.md for a description of parameters. [include fluidd.cfg] [mcu] serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0 restart_method: command [printer] kinematics: cartesian max_velocity: 300 max_accel: 3000 max_z_velocity: 5 max_z_accel: 100 [stepper_x] step_pin: PC2 dir_pin: PB9 enable_pin: !PC3 microsteps: 16 rotation_distance: 40 endstop_pin: ^PA5 position_endstop: 0 position_max: 235 homing_speed: 50 [stepper_y] step_pin: PB8 dir_pin: PB7 enable_pin: !PC3 microsteps: 16 rotation_distance: 40 endstop_pin: ^PA6 position_endstop: 0 position_max: 235 homing_speed: 50 [stepper_z] step_pin: PB6 dir_pin: !PB5 enable_pin: !PC3 microsteps: 16 rotation_distance: 8 endstop_pin: ^PA7 position_endstop: 0.0 position_max: 250 [extruder] max_extrude_only_distance: 100.0 step_pin: PB4 dir_pin: PB3 enable_pin: !PC3 microsteps: 16 rotation_distance: 34.406 nozzle_diameter: 0.400 filament_diameter: 1.750 heater_pin: PA1 sensor_type: EPCOS 100K B57560G104F sensor_pin: PC5 control: pid # tuned for stock hardware with 200 degree Celsius target pid_Kp: 21.527 pid_Ki: 1.063 pid_Kd: 108.982 min_temp: 0 max_temp: 250 [heater_bed] heater_pin: PA2 sensor_type: EPCOS 100K B57560G104F sensor_pin: PC4 control: pid # tuned for stock hardware with 50 degree Celsius target pid_Kp: 54.027 pid_Ki: 0.770 pid_Kd: 948.182 min_temp: 0 max_temp: 130 [fan] pin: PA0 配置修改参数即可使用，注意，刷了klipper之后原厂的屏幕就用不了了 ","date":"2024-03-27","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%88%9B%E6%83%B3%E4%B8%89%E7%BB%B4ender%E5%88%B7klipper%E4%B8%8B%E4%BD%8D%E6%9C%BA/:0:2","tags":["3d打印机"],"title":"创想三维ender刷klipper下位机","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%88%9B%E6%83%B3%E4%B8%89%E7%BB%B4ender%E5%88%B7klipper%E4%B8%8B%E4%BD%8D%E6%9C%BA/"},{"categories":["STM32","嵌入式学习"],"content":"参考链接 引用\rhttps://blog.csdn.net/qq_41806966/article/details/126894938 ","date":"2024-03-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/stm32f103%E7%82%B9%E7%81%AF/:0:1","tags":["操作记录"],"title":"STM32F103点灯","uri":"https://naonano.gitee.io/zhb.gitee.io/stm32f103%E7%82%B9%E7%81%AF/"},{"categories":["STM32","嵌入式学习"],"content":"疑难杂症记录 STM32F103最小系统板驱动硬件spi的lcd屏幕时，每次都需要用手按一下复位才可以显示？很疑惑 解决方法： 重新焊接了一下引脚，发现它好了！应该是焊锡太久氧化了，导致接触不良！ 反省： 以后用很久以前就焊接好的系统板之前都要先用焊笔重新焊接一下，确保不因为这种低级错误浪费时间。 ","date":"2024-03-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/stm32f103%E7%82%B9%E7%81%AF/:0:2","tags":["操作记录"],"title":"STM32F103点灯","uri":"https://naonano.gitee.io/zhb.gitee.io/stm32f103%E7%82%B9%E7%81%AF/"},{"categories":["树莓派"],"content":"参考链接 引用\rhttps://blog.csdn.net/zncg24/article/details/135693776 ","date":"2024-03-04","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85%E8%A5%BF%E9%97%A8%E5%AD%90snap7%E5%BA%93/:0:1","tags":["开发板折腾"],"title":"树莓派安装西门子snap7库","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85%E8%A5%BF%E9%97%A8%E5%AD%90snap7%E5%BA%93/"},{"categories":["树莓派"],"content":"操作步骤 下载这个压缩包放到树莓派上： https://sourceforge.net/projects/snap7/files/Snap7-IoT/snap7-iot-arm/ 在树莓派上执行： tar -xvzf snap7-iot-arm-1.4.2.tar.gz cd snap7-iot-arm-1.4.2/build/unix sudo make -f arm_v7_x64_linux.mk install 编译成功，实测可以引用成功libsnap7.so文件在/usr/lib里 ","date":"2024-03-04","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85%E8%A5%BF%E9%97%A8%E5%AD%90snap7%E5%BA%93/:0:2","tags":["开发板折腾"],"title":"树莓派安装西门子snap7库","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85%E8%A5%BF%E9%97%A8%E5%AD%90snap7%E5%BA%93/"},{"categories":["嵌入式知识点"],"content":"参考链接 引用\rhttps://blog.csdn.net/yilongdashi/article/details/91352651 https://blog.csdn.net/zmlcool/article/details/6730973 https://blog.csdn.net/m0_75266675/article/details/134224558 https://blog.csdn.net/xianming_flag/article/details/110401128 https://blog.csdn.net/shaguahaha/article/details/70766665 https://blog.csdn.net/as480133937/article/details/105764119 https://blog.csdn.net/qq_45722156/article/details/116332826 https://zhuanlan.zhihu.com/p/162708070 https://blog.csdn.net/GG_Bruse/article/details/124360771 ","date":"2024-03-03","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%AC%94%E8%AF%95%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:0:1","tags":["嵌入式笔试","C语言"],"title":"嵌入式笔试问题汇总","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%AC%94%E8%AF%95%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["嵌入式知识点"],"content":"问题点记录 波特率115200每秒传多少字节 1GB=1024MB 1MB=1024KB 1KB=1024B（字节) 波特率115200 ＝ 115200 (位/秒) 如果没有校验位，就应该除以 10(因为一个字节8位，1位起始位，1位停止位，如果有奇偶校验，还要算上1位校验位)，得到的是每秒字节数： 波特率115200 ＝ 115200 (位/秒) ＝ 11520 (字节/秒) 再除以 1024，就是每秒 KB 数： 波特率115200 ＝ 115200 (位/秒) ＝ 11.25 (KB/秒)也就是满足每秒可以接收512字节 C语言各个类型长度 类型名(type) 字节数(bytes) int 2 signed char 或 unsigned char 1 short int 或 short 2 long int 或 long 4 long long int 或 long long 8 unsigned short int 或 unsigned short 2 unsigned int 4 unsigned long int 或 unsigned long 4 unsigned long long int 或 unsigned long long 8 宏定义一个变量u16获取一个数的高八位和低八位 #define u16_LO(xxx) ((byte) ((u16)(xxx) \u0026 255)) #define u16_HI(xxx) ((byte) ((u16)(xxx) \u003e\u003e 8)) 判断年份是不是闰年 闰年是指在公历（格里高利历）中，年份可以被4整除但不能被100整除的年份，或者可以被400整除的年份 年份能被4整除，但不能被100整除的是闰年（例如2008年，2012年）； 年份能被400整除的也是闰年（例如2000年）； 年份能被100整除但不能被400整除的不是闰年（例如1900年不是闰年） 代码如下： #include \u003cstdio.h\u003e //引用头文件 int main() { int i; printf(\"请输入一个年份 ：\"); scanf(\"%d\", \u0026i); if ((i % 4 == 0 \u0026\u0026 i % 100 != 0) || i % 400 == 0) //能整除4且不能整除100 或能整除400 { printf(\"%d年是闰年\\n\", i); } else printf(\"不是闰年\\n\"); return 0; } C语言冒泡算法 其实很好理解的，就是for循环的嵌套，尤其是理解每一层循环的意思 #include \u003cstdio.h\u003e void main() { int n[10] = { 25,35,68,79,21,13,98,7,16,62 };//定义一个大小为10的数组 int i, j, temp; for (i = 1; i \u003c= 9; i++) //外层循环是比较的轮数，数组内有10个数，那么就应该比较10-1=9轮 { for (j = 0; j \u003c= 9 - i; j++) //内层循环比较的是当前一轮的比较次数，例如：第一轮比较9-1=8次，第二轮比较9-2=7次 { if (n[j] \u003e n[j + 1]) //相邻两个数如果逆序，则交换位置 { temp = n[j]; n[j] = n[j + 1]; n[j + 1] = temp; } } } printf(\"排序过后的数顺序:\\n\"); for (i = 0; i \u003c 10; i++) printf(\"%-4d\", n[i]); printf(\"\\n\"); } I2C协议及操作(两线式串行总线) I2C总线具有两根双向信号线，一根是数据线SDA，另一根是时钟线SCL IIC总线上可以挂很多设备：多个主设备，多个从设备（外围 设备） 多主机会产生总线裁决问题。当多个主机同时想占用总线时，企图启动总线传输数据，就叫做总线竞争。I2C通过总线仲裁，以决定哪台主机控制总线 上拉电阻一般在4.7k~10k之间 每个接到I2C总线上的器件都有唯一的地址。主机与其它器件间的数据传输可以是由主机发送数据到其它器件，这时主机 即为发送器，总线上收数据的器件则为接收器 起始与终止信号: SCL高电平； SDA由高到低，起始信号； SDA由低到高，起始信号 起始信号和终止信号都是由主机发送的。在起始信号产生之后，总线就处于被占用的状态，在终止信号产生之后，总线就处于空闲状态 接收端通过拉低SDA数据线，给发送端发送一个应答信号，以提醒发送端我这边已经接受完成，数据可以继续传输，接下来，发送端就可以继续发送数据了 字节传送： MSB高位先传输，总共8位长度。 每个字节必须跟一位应答位，即一帧9位 stm32的GPIO配置流程 1. 定义GPIO引脚的结构体变量 GPIO_InitTypeDef GPIO_InitStructure; 2. 配置引脚的速度（可以配置你用到的多个引脚）,也就是配置引脚时钟 RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE); 3. 初始化结构体的变量，详情见下面（对结构体的详细理解） （1）引脚 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5; 如果不是只用5号引脚，可以将GPIO_Pin_5改成GPIO_Pin_All （2）速度 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; （3）模式 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;//推挽模式 既可以0 又可以1 4. 初始化对应的端口 GPIO_Init(GPIOC, \u0026GPIO_InitStructure); GPIO_Init(GPIOE, \u0026GPIO_InitStructure); SPI协议及操作(串行高速总线) 提供时钟的为主设备（Master），接收时钟的设备为从设备（Slave），SPI接口的读写操作，都是由主设备发起。当存在多个从设备时，通过各自的片选信号进行管理 SPI是全双工且SPI没有定义速度限制，一般的实现通常能达到甚至超过10 Mbps SPI接口一般使用四条信号线通信： SDI（数据输入），SDO（数据输出），SCK（时钟），CS（片选） MISO： 主设备输入/从设备输出引脚。该引脚在从模式下发送数据，在主模式下接收数据。 MOSI： 主设备输出/从设备输入引脚。该引脚在主模式下发送数据，在从模式下接收数据。 SCLK： 串行时钟信号，由主设备产生。 CS/SS：从设备片选信号，由主设备控制。它的功能是用来作为“片选引脚”，也就是选择指定的从设备，让主设备可以单独地与特定从设备通讯，避免数据线上的冲突。 SPI是单主设备（ single-master ）通信协议，这意味着总线中的只有一支中心设备能发起通信。当SPI主设备想读/写从设备时，它首先拉低从设备对应的SS线（SS是低电平有效），接着开始发送工作脉冲到时钟线上，在相应的脉冲时间上，主设备把信号发到MOSI实现“写”，同时可对MISO采样而实现“读” STM32中SPI初始化配置: 1.初始化GPIO口，配置相关引脚的复用功能，使能SPIx时钟。调用函数：void GPIO_Init()； 2.使能SPI时钟总线:RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1,ENABLE) 3.配置SPI初始化的参数，设置SPI工作模式:SPI_Init(SPI1,\u0026SPI_Initstructure) 4.使能SPI外设：SPI_Cmd(SPI1,ENABLE); spi的配置参数： typedef struct { uint16_t SPI_Direction; /*!\u003c 传输方向，两向全双工，单向接收等*/ uint16_t SPI_Mode; /*!\u003c 模式选择，确定主机还是从机 */ uint16_t SPI_DataSize; /*!\u003c 数据大小，8位还是16位 */ uint16_t SPI_CPOL; /*!\u003c 时钟极性选择 */ uint16_t SPI_CPHA; /*!\u003c 时钟相位选择 */ uint16_t SPI_NSS; /*!\u003c 片选是硬件还是软件*/ uint16_t SPI_BaudRatePrescaler; /*!\u003c 分频系数 */ uint16_t SPI_FirstBit; /*!\u003c 指定数据传输是从MSB还是LSB位开始的。M SB就是二进制第一位，LSB就是最后一位 */ uint16_t SPI_CRCPolynomial; /*!\u003c CRC校验 ，设置 CRC 校验多项式，提高通 信可靠性，大于 1 即可*/ }SPI_InitTypeDef; spi的初始化函数： void SPI2_Init(void) { GPIO_InitTypeDef GPIO_InitStructure; SPI_InitTypeDef SPI_InitStructure; RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB, ENABLE );//PORTB时钟使能 RCC_APB1PeriphClockCmd( RCC_APB1Periph_SPI2, ENABLE );//SPI2时钟使能 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 | GPIO_Pin_14 | G","date":"2024-03-03","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%AC%94%E8%AF%95%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:0:2","tags":["嵌入式笔试","C语言"],"title":"嵌入式笔试问题汇总","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%AC%94%E8%AF%95%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Win10","问题记录"],"content":"问题及解决 打开fontawesome.com时页面提示： 你的连接不是专用连接 NET::ERR_CERT_AUTHORITY_INVALID 你现在无法访问 fontawesome.com，因为网站使用的是 HSTS。网络错误和攻击通常是暂时的，因此该页面以后可能会恢复正常。 解决方法 打开win10设置-\u003e网络和internet-\u003e代理 将自动检测设置和使用代理服务器打开，重新访问页面发现可以了 ","date":"2024-03-03","objectID":"https://naonano.gitee.io/zhb.gitee.io/win10%E7%94%A8edge%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BAhts%E5%AE%89%E5%85%A8%E9%94%99%E8%AF%AF/:0:1","tags":["edge浏览器"],"title":"win10下edge浏览器打开网页报错： 不是安全连接","uri":"https://naonano.gitee.io/zhb.gitee.io/win10%E7%94%A8edge%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BAhts%E5%AE%89%E5%85%A8%E9%94%99%E8%AF%AF/"},{"categories":["树莓派","Linux","摄像头"],"content":"参考链接 引用\rhttps://blog.csdn.net/weixin_42361175/article/details/117011888#\r","date":"2024-03-01","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BEfswebcam%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8E%A7%E5%88%B6usb%E6%91%84%E5%83%8F%E5%A4%B4%E6%8B%8D%E7%85%A7/:0:1","tags":["fswebcam","开发板折腾"],"title":"树莓派fswebcam命令行控制usb摄像头拍照","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BEfswebcam%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8E%A7%E5%88%B6usb%E6%91%84%E5%83%8F%E5%A4%B4%E6%8B%8D%E7%85%A7/"},{"categories":["树莓派","Linux","摄像头"],"content":"操作步骤 sudo apt update sudo apt upgrade sudo apt-get install fswebcam sudo fswebcam -r 720x640 --jpeg 85 -D 1 web-cam-shot.jpg sudo fswebcam -d /dev/video2 --no-banner -r 1280x720 test/test.jpg 或 sudo fswebcam -d /dev/video0 -r 720x640 --jpeg 85 -D 1 web-cam-shot.jpg -d代表指定哪个设备拍照 -r代表图像分辨率，--jpeg代表图像的格式类型\u0026 85质量标准，-D代表捕获前的延迟设置 fswebcam --help # 查看使用手册 ","date":"2024-03-01","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BEfswebcam%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8E%A7%E5%88%B6usb%E6%91%84%E5%83%8F%E5%A4%B4%E6%8B%8D%E7%85%A7/:0:2","tags":["fswebcam","开发板折腾"],"title":"树莓派fswebcam命令行控制usb摄像头拍照","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BEfswebcam%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8E%A7%E5%88%B6usb%E6%91%84%E5%83%8F%E5%A4%B4%E6%8B%8D%E7%85%A7/"},{"categories":["树莓派","Linux","脚本"],"content":"参考链接 引用\rhttps://blog.csdn.net/weixin_42361175/article/details/117011888# https://blog.csdn.net/u012206617/article/details/118366597 ","date":"2024-02-28","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%8A%A8%E6%8B%8D%E7%85%A7%E8%84%9A%E6%9C%AC/:0:1","tags":["命令行驱动摄像头"],"title":"树莓命令行自动拍照脚本","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%8A%A8%E6%8B%8D%E7%85%A7%E8%84%9A%E6%9C%AC/"},{"categories":["树莓派","Linux","脚本"],"content":"脚本内容如下： #!/bin/bash echo \"Welcome !\" echo \"The program will start now !\" #sudo apt update \u0026\u0026 sudo apt upgrade -y #sudo apt-get install fswebcam ffmpeg dir0=\"./video0\" dir1=\"./video1\" if [ ! -d \"$dir0\" ];then mkdir $dir0 echo \"创建video0成功\" else echo \"video0已经存在\" fi if [ ! -d \"$dir1\" ];then mkdir $dir1 echo \"创建video1成功\" else echo \"video1已经存在\" fi sudo chmod 777 * for i in {1..9999} do sudo ffmpeg -i /dev/video0 -frames:v 1 video0/a.jpg -y mv video0/a.jpg video0/$i.jpg sudo ffmpeg -i /dev/video2 -frames:v 1 video1/b.jpg -y mv video1/b.jpg video1/$i.jpg echo \"Take the num$i image\" python3 yuchuli.py python3 test.py sleep 1s done echo \"Done !\" echo \"The program will exit now !\" ","date":"2024-02-28","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%8A%A8%E6%8B%8D%E7%85%A7%E8%84%9A%E6%9C%AC/:0:2","tags":["命令行驱动摄像头"],"title":"树莓命令行自动拍照脚本","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%8A%A8%E6%8B%8D%E7%85%A7%E8%84%9A%E6%9C%AC/"},{"categories":["Hugo"],"content":"参考链接 引用\r1. https://blog.csdn.net/m0_43457463/article/details/125708065#\r2. https://github.com/algolia/cli?tab=readme-ov-file\r3. https://www.algolia.com/doc/tools/cli/get-started/overview/\r4. https://zhuanlan.zhihu.com/p/642649638\r5. https://hugoloveit.com/zh-cn/theme-documentation-basics/#5-%E6%90%9C%E7%B4%A2\r6. https://hugoloveit.com/zh-cn/posts/\r","date":"2024-02-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/hugo%E7%9A%84loveit%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%9F%BA%E4%BA%8Ealgolia/:0:1","tags":["博客美化"],"title":"Hugo的Loveit主题配置搜索功能(基于algolia)","uri":"https://naonano.gitee.io/zhb.gitee.io/hugo%E7%9A%84loveit%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%9F%BA%E4%BA%8Ealgolia/"},{"categories":["Hugo"],"content":"操作步骤 将hugo.toml文件中配置为如下： [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"algolia\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"请输入关键词搜索\" # LoveIt 新增 | 0.2.1 最大结果数目 maxResultLength = 12 # LoveIt 新增 | 0.2.3 结果内容片段长度 snippetLength = 100 # LoveIt 新增 | 0.2.1 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # LoveIt 新增 | 0.2.4 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = true [params.search.algolia] index = \"your index name define in algolia\" appID = \"your Application ID\" searchKey = \"your searchKey\" 参考链接1创建algolia账号并配置api 将获取的api key等参数填入hugo.toml的[params.search]中,尝试运行看看搜索能否实现 hugo server --buildDrafts --disableFastRender 下载algolia-cli自动脚本并安装，以便后期更新index.json(不会用，换成链接3的办法) 参考链接4，cmd或powershell进入博客根目录，执行以下命令： npm init npm install atomic-algolia --save 在根目录下会有个package.json文件，打开编辑在scripts:{}中添加\"algolia\": “atomic-algolia\"如下： \"scripts\": { \"test\": \"echo \\\"Error: no test specified\\\" \u0026\u0026 exit 1\", \"algolia\": \"atomic-algolia\" }, 根目录下建立一个.env文件，文件内容如下： ALGOLIA_APP_ID=Your Application ID ALGOLIA_INDEX_NAME=Your Index Name ALGOLIA_INDEX_FILE=public/index.json ALGOLIA_ADMIN_KEY=Your Admin API Key 在 blog 项目根目录下执行下面的命令便可将索引文件自动上传至更新到algolia npm run algolia 在日后，我们每一次增添文章或修改文章后，都要再将索引文件上传以更新。一般来说，我们只要在 blog 项目根目录执行下面两行代码，便可以更新索引文件。 使索引文件 index.json 在文件夹 public 中生成 hugo --buildDrafts 将索引文件上传 npm run algolia ","date":"2024-02-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/hugo%E7%9A%84loveit%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%9F%BA%E4%BA%8Ealgolia/:0:2","tags":["博客美化"],"title":"Hugo的Loveit主题配置搜索功能(基于algolia)","uri":"https://naonano.gitee.io/zhb.gitee.io/hugo%E7%9A%84loveit%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%9F%BA%E4%BA%8Ealgolia/"},{"categories":["Win10","问题记录"],"content":"参考链接 引用\r参考链接:\rhttps://zhuanlan.zhihu.com/p/649207787\r","date":"2024-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80/:0:1","tags":["批量修改文件后缀"],"title":"win10下批量修改文件后缀","uri":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80/"},{"categories":["Win10","问题记录"],"content":"操作步骤 在文件夹里面新建一个tx文本，点击打开txt文本，输入一小段代码： ren *.txt *.md 以上代码意思就是将文件后缀名txt改成md 将txt文件改成bat文件（后缀改成bat后按下回车键），最后再运行这个bat文件即可完成对当前文件夹内所有文件后缀名的批量修改了。 ","date":"2024-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80/:0:2","tags":["批量修改文件后缀"],"title":"win10下批量修改文件后缀","uri":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80/"},{"categories":null,"content":"影视资源下载目录 ","date":"2024-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/download/%E5%BD%B1%E8%A7%86%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/:0:1","tags":null,"title":"影视资源下载链接","uri":"https://naonano.gitee.io/zhb.gitee.io/download/%E5%BD%B1%E8%A7%86%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/"},{"categories":null,"content":"软件下载目录 ","date":"2024-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/download/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD/:0:1","tags":null,"title":"软件下载链接","uri":"https://naonano.gitee.io/zhb.gitee.io/download/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD/"},{"categories":["Hugo"],"content":"参考链接 引用\rhttps://www.gohugo.org/\rhttps://www.gohugo.org/doc/\rhttps://themes.gohugo.io/themes/anatole/\rhttps://github.com/lxndrblz/anatole/wiki/1%EF%B8%8F%E2%83%A3-Essential-Steps\rhttps://fontawesome.com/\rhttps://smc.im/post/resolve-integrity-error-in-hugo/\rhttps://markdown.com.cn/ (markdown语法教程)\rhttps://huweim.github.io/post/blog_hugo_%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/\r","date":"2024-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:0:1","tags":["博客搭建"],"title":"Hugo搭建个人博客","uri":"https://naonano.gitee.io/zhb.gitee.io/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hugo"],"content":"常用操作记录 创建新文章 hugo new post/first.md 调试页面，修改完内容和配置后运行以下命令，会实时渲染 hugo server --buildDrafts --theme 选择哪个皮肤; --buildDrafts 由于想显示我们的内容，包括设置了 draft 草稿状态的内容。 部署静态页面到gitee或github (每次修改配置或发布文章都需要按照以下步骤重新部署，且需要先删除public目录) hugo --buildDrafts 或者 hugo --buildDrafts --theme=anatole --baseURL=\"https://naonano.gitee.io/zhb.gitee.io/\" cd .\\public\\ git init git remote add origin https://gitee.com/naonano/zhb.gitee.git git add . git commit -m \"lastest commit\" git push --force -u origin master ","date":"2024-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:0:2","tags":["博客搭建"],"title":"Hugo搭建个人博客","uri":"https://naonano.gitee.io/zhb.gitee.io/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"摘要 注意\r(由于hexo主题存在太多兼容性问题和坑，已改用Hugo搭建博客) 利用hexo和gitee的 gitee page搭建个人博客\" ","date":"2024-02-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/:0:1","tags":["博客搭建"],"title":"Hexo博客搭建记录","uri":"https://naonano.gitee.io/zhb.gitee.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"},{"categories":["Hexo"],"content":"参考链接 引用\rhttps://blog.csdn.net/weixin_45019350/article/details/121901433 https://blog.csdn.net/qq_43580193/article/details/117341489 https://zhuanlan.zhihu.com/p/137338730# ","date":"2024-02-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/:0:2","tags":["博客搭建"],"title":"Hexo博客搭建记录","uri":"https://naonano.gitee.io/zhb.gitee.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"},{"categories":["Hexo"],"content":"操作步骤： 1.安装环境依赖 下载最新的nodejs手动安装：https://nodejs.org/en/download/ wget https://nodejs.org/dist/v20.11.0/node-v20.11.0-linux-x64.tar.xz sudo mkdir -p /usr/local/lib/nodejs sudo tar -xJvf node-v20.11.0-linux-x64.tar.xz -C /usr/local/lib/nodejs 添加环境变量 用户.bashrc和系统/etc/profile sudo nano /home/zhb/.bashrc sudo nano /etc/profile 都要在最后加入下面这行 export PATH=/usr/local/lib/nodejs/node-v20.11.0-linux-x64/bin:$PATH source .bashrc source /etc/profile 之后命令行输入 node -v # 有显示版本信息即为成功 安装git： sudo apt-get install git-core 安装cnpm(非必须): npm install -g cnpm --registry=https://registry.npm.taobao.org 2.安装hexo-cli npm install -g hexo-cli 或者 cnpm install -g hexo-cli 验证： hexo -v 3.初始化hexo hexo init myblog # 这里大概率会出现git clone失败的错误 sudo nano /usr/local/lib/nodejs/node-v20.11.0-linux-x64/lib/node_modules/hexo-cli/dist/console/init.js 改一下这个文件init.js,把原来的git url替换为以下： const GIT_REPO_URL = 'https://gitee.com/naonano/hexo-starter.git' 之后重新执行hexo init 4.安装npm cd myblog npm install 5.启动站点 hexo g hexo server 6.在gitee搭建站点 gitee上创建仓库，仓库名称随意，路径设置为：用户名+.gitee.io 例如： binbyzhang.gitee.io 安装一个插件hexo-deployer npm install hexo-deployer-git --save 修改hexo配置文件指定仓库路径 sudo nano _config.yml 添加以下内容： deploy: type: git repo: https://gitee.com/naonano/binbyzhang.gitee.io.git branch: master 推送站点文件到gitee git config --global user.email \"gitee的邮箱\" git config --global user.name \"gitee用户名\" git config --global user.password \"gitee用户密码\" hexo d 输入gitee账号和密码 然后开启仓库的 gitee pages服务，勾选强制https服务 7.访问测试 https://naonano.gitee.io/binbyzhang.gitee.io/ ","date":"2024-02-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/:0:3","tags":["博客搭建"],"title":"Hexo博客搭建记录","uri":"https://naonano.gitee.io/zhb.gitee.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"},{"categories":["Win10","问题记录","Wsl"],"content":"参考链接 引用\rhttps://blog.csdn.net/weixin_43328157/article/details/129052041 https://learn.microsoft.com/zh-cn/windows/terminal/install https://learn.microsoft.com/zh-cn/windows/wsl/setup/environment#set-up-your-linux-username-and-password https://learn.microsoft.com/zh-cn/windows/wsl/install https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config ","date":"2024-02-06","objectID":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E7%9A%84wsl%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/:0:1","tags":["win10的wsl操作"],"title":"win10下的WSL操作记录","uri":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E7%9A%84wsl%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"},{"categories":["Win10","问题记录","Wsl"],"content":"wsl常用操作 wsl --update # 更新wsl内核 wsl --list --online # 更新wsl发行版列表 wsl --list --verbose # 列出已安装的子系统 wsl --set-version \u003cdistribution name\u003e \u003cversionNumber\u003e # 为子系统设置指定的wsl版本，\u003cdistribution name\u003e 替换为发行版的名称， # 并将 \u003cversionNumber\u003e 替换为 1 或 2 wsl --set-default-version \u003cVersion\u003e # 设置 WSL 1或 WSL 2的默认版本，请将\u003cVersion\u003e替换为数字 1 或 2 wsl --status # 查看wsl状态 wsl --terminate \u003cDistribution Name\u003e # 关闭指定子系统 wsl --unregister \u003cDistributionName\u003e # 卸载指定子系统 wsl --install ubuntu # 安装ubuntu wsl --install debian # 安装debian wsl --install kali-linux # 安装kali ","date":"2024-02-06","objectID":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E7%9A%84wsl%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/:0:2","tags":["win10的wsl操作"],"title":"win10下的WSL操作记录","uri":"https://naonano.gitee.io/zhb.gitee.io/win10%E4%B8%8B%E7%9A%84wsl%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"},{"categories":["问题记录","诺基亚"],"content":"操作方法 硬格机：关机后重启手机后马上同时按住按住*号键、3号键、拨号键 且不能松开任何一个按键，直到屏幕出现NOKIA字母时才可以松开按键，否则会把系统搞坏的，这种叫硬格机，是在忘记手机密码的情况下使用的方法，硬格机后，手机密码会恢复成12345。 软格机：待机状态下输入*#7370#再输入手机密码12345 等手机自动重启是软格机，这种办法是手机出现严重错误或中毒的情况下使用的，格机后手机系统会恢复到原始状态。 温馨提示：两种格机后，手机里安装的所有软件和电话号码，信息都会全部消失，建议格机前先把朋友的号码和重要信息全部复制到SIM卡里，格机后再复制回来就行了 ","date":"2024-01-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E8%AF%BA%E5%9F%BA%E4%BA%9A%E8%80%81%E4%BA%BA%E6%9C%BA%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/:0:1","tags":[],"title":"诺基亚老人机忘记密码解决方法","uri":"https://naonano.gitee.io/zhb.gitee.io/%E8%AF%BA%E5%9F%BA%E4%BA%9A%E8%80%81%E4%BA%BA%E6%9C%BA%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"},{"categories":["树莓派","Linux","问题记录"],"content":"操作步骤 在以下路径：/usr/lib/firmwear/brcm/ 用一张新的内存卡烧录同样的镜像文件，插到树莓派运行 进入路径：/usr/lib/firmwear/brcm/ cd /usr/lib/firmwear/brcm/ 将文件brcmfmac43455-sdio.raspberrypi4-model-b.txt复制出来，树莓派关机 2.插回原来的内存卡开机，到同样路径下，备份原来的文件： sudo cp brcmfmac43455-sdio.raspberrypi,4-model-b.txt brcmfmac43455-sdio.raspberrypi,4-model-b.txt.bak 将新卡复制出来的brcmfmac43455-sdio.raspberrypi4-model-b.txt替换进去，之后重启系统，即可找到wlan0 可以用beyodcompare软件对比两个文件的差异，观察区别 之后用命令查看是否有wlan0 ifconfig 或 nmcli d ","date":"2023-12-29","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BEcentos%E6%89%BE%E4%B8%8D%E5%88%B0wlan0%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/:0:1","tags":["开发板折腾"],"title":"树莓派centos找不到wlan0网卡解决方法","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BEcentos%E6%89%BE%E4%B8%8D%E5%88%B0wlan0%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"},{"categories":["路由器","刷机","Padavan","Openwrt"],"content":"参考链接 引用\r视频教程：https://www.bilibili.com/video/BV1tw41157hd/?vd_source=2c096a3ac6e1f0b768fd4d477a1eaae2\r原帖地址：https://www.right.com.cn/forum/thread-8315054-1-1.html\r固件下载地址：https://410252889.lanzouv.com/b0bt7de8d 密码:60rx\r","date":"2023-12-28","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7breed%E6%88%96pbboot%E5%9B%BA%E4%BB%B6/:0:1","tags":["路由器折腾"],"title":"小米路由器刷breed或pbboot固件","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7breed%E6%88%96pbboot%E5%9B%BA%E4%BB%B6/"},{"categories":["路由器","刷机","Padavan","Openwrt"],"content":"操作步骤 恢复路由原厂稳定版固件，并设置路由器密码 网线连接路由和电脑 运行 开始.bat，执行界面的1，2，3，4步骤 在breed界面刷入padavan固件，注意和eeprom.bin一起刷入 说明： 备份的文件在XiaoMi R4A flash tool\\data目录下 eeprom.bin（无线驱动备份），backup.bin（编程器固件备份） ","date":"2023-12-28","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7breed%E6%88%96pbboot%E5%9B%BA%E4%BB%B6/:0:2","tags":["路由器折腾"],"title":"小米路由器刷breed或pbboot固件","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7breed%E6%88%96pbboot%E5%9B%BA%E4%BB%B6/"},{"categories":["Linux","Ubuntu"],"content":"摘要 引用\rubuntu-server安装桌面：\rhttps://zhuanlan.zhihu.com/p/373773218\r安装ubuntu-desktop中断之后重新安装报错:\rhttps://blog.csdn.net/u013832707/article/details/113104006\rubuntu远程配置桌面：\rhttps://blog.csdn.net/siri99999/article/details/110704597\r","date":"2023-12-25","objectID":"https://naonano.gitee.io/zhb.gitee.io/ubuntu%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B/:0:1","tags":["Ubuntu配置远程","Ubuntu安装桌面"],"title":"ubuntu安装桌面、配置远程","uri":"https://naonano.gitee.io/zhb.gitee.io/ubuntu%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B/"},{"categories":["Linux","Ubuntu"],"content":"操作步骤 ubuntu-server安装桌面 sudo apt install tasksel sudo tasksel install ubuntu-desktop 或 sudo apt install ubuntu-desktop 安装ubuntu-desktop中断之后重新安装报错：needrestart is being skipped since dpkg has failed 方法：https://blog.csdn.net/u013832707/article/details/113104006 操作要领： （以下三选一） sudo dpkg --configure -a sudo apt-get install -f sudo apt-get remove --purge package_name ubuntu远程配置桌面 sudo apt-get install tightvncserver xrdp net-tools sudo /etc/init.d/xrdp restart 输入如下命令 ，检查3350 3389 22 这三个端口处于LISTEN，一般就没问题了 netstat -tnl 然后使用win10自带的远程软件即可 ","date":"2023-12-25","objectID":"https://naonano.gitee.io/zhb.gitee.io/ubuntu%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B/:0:2","tags":["Ubuntu配置远程","Ubuntu安装桌面"],"title":"ubuntu安装桌面、配置远程","uri":"https://naonano.gitee.io/zhb.gitee.io/ubuntu%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B/"},{"categories":["路由器","Padavan"],"content":"摘要 摘要\rPadavan - 配置无线桥接（AP Bridge）/ 无线中继 -\r参考链接：https://swsmile.info/post/padavan-setup-wireless-bridge/\r以下步骤仅为防止原文失联，具体操作看原文(有图)更详细！\r","date":"2023-12-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/padavan-%E9%85%8D%E7%BD%AE%E6%97%A0%E7%BA%BF%E6%A1%A5%E6%8E%A5ap-bridge%E6%97%A0%E7%BA%BF%E4%B8%AD%E7%BB%A7/:0:1","tags":["路由器无线桥接"],"title":"Padavan - 配置无线桥接（AP Bridge）无线中继","uri":"https://naonano.gitee.io/zhb.gitee.io/padavan-%E9%85%8D%E7%BD%AE%E6%97%A0%E7%BA%BF%E6%A1%A5%E6%8E%A5ap-bridge%E6%97%A0%E7%BA%BF%E4%B8%AD%E7%BB%A7/"},{"categories":["路由器","Padavan"],"content":"相关记录 设置无线桥接 进入 Padavan 管理页面 —— 高级设置 —— 无线 2.4GHz—— 无线桥接。将设置和下图填写一致即可，对于上级 SSID，不用自己手动输入，点击下箭头，从下拉框中选取你主路由发射出来的 wifi 信号即可 对于无线工作模式 AP：开启无线中继（AP）和有线中继（AP-Client），again，这意味着副路由器的 WAN 口不需要连接网线，而连接到副路由器的 WIFI 的设备和通过网线连接到副路由器的 LAN 口的设备可以访问互联网 AP-Clinet（禁用AP）：仅开启有线中继（AP-Client），这意味着副路由器的 WAN 口不需要连接网线，而通过网线连接到副路由器的 LAN 口的设备可以访问互联网 对于无线 AP-Client 角色:： WAN (Wireless ISP)：需要开启副路由器的 DHCP 服务，因而连接副路由器设备的 IP 地址与连接主路由设备的 IP 地址不出现在一个网段下。 LAN bridge：如果设置为这个，则需要关闭副路由器的 DHCP 服务：高级设置 —— 内部网络（LAN）——DHCP 服务器 —— 关闭 DHCP 一句话概括，副路由器是否进行 NAT，如果是，则为 WAN (Wireless ISP)，否则为 LAN bridge 高级设置中分别修改2.4G和5G，一般建议两个wifi名字不同。如果要实现双频和一，就把名字密码加密方式都改一样。 ","date":"2023-12-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/padavan-%E9%85%8D%E7%BD%AE%E6%97%A0%E7%BA%BF%E6%A1%A5%E6%8E%A5ap-bridge%E6%97%A0%E7%BA%BF%E4%B8%AD%E7%BB%A7/:0:2","tags":["路由器无线桥接"],"title":"Padavan - 配置无线桥接（AP Bridge）无线中继","uri":"https://naonano.gitee.io/zhb.gitee.io/padavan-%E9%85%8D%E7%BD%AE%E6%97%A0%E7%BA%BF%E6%A1%A5%E6%8E%A5ap-bridge%E6%97%A0%E7%BA%BF%E4%B8%AD%E7%BB%A7/"},{"categories":["Win10","问题记录"],"content":"常用操作 查看电脑连接过的WiFi密码： 使用win+r打开以管理员身份命令行 输入netsh wlan show profile name=“WiFi名称” key=clear ","date":"2023-12-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/win10%E6%9F%A5%E7%9C%8B%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%9A%84wifi%E5%92%8C%E5%AF%86%E7%A0%81/:0:1","tags":["查看连接过的wifi"],"title":"win10查看连接过的wifi和密码","uri":"https://naonano.gitee.io/zhb.gitee.io/win10%E6%9F%A5%E7%9C%8B%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%9A%84wifi%E5%92%8C%E5%AF%86%E7%A0%81/"},{"categories":["Vmware","Klipper","Linux"],"content":"操作步骤 下载VMware，并安装： https://pan.baidu.com/s/1Hc3yK1oVUY3m3N6ZDgZE3A 提取码：3456 VMware下ubuntu设置共享文件夹： sudo apt update sudo apt install open-vm-tools-desktop fuse sudo mkdir /mnt/hgfs sudo mount -t fuse.vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other 下载一个Linux镜像，推荐ubuntu: https://mirrors-i.tuna.tsinghua.edu.cn/ ！最好用2004及以上版本的ubuntu，低版本会因为python版本错误导致安装失败 常规安装虚拟机进行即可 vmware-tools可能安装不上: 点击安装vmware-tools之后登出用户重新进来一般可以 如果出现两个询问窗口，第二个窗口点击否，也可以解决 换源： sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak sudo nano /etc/apt/sources.list 写入以下内容覆盖原文件，根据系统选择： Ubuntu 16.04 (LTS)代号为xenial。 Ubuntu 18.04 (LTS)代号为bionic。 Ubuntu 20.04 (LTS)代号为focal。 输入lsb_release -a可以查看 清华源 xenial 1604 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse # deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse # # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse deb http://security.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse # deb-src http://security.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse 清华源 bionic 1804 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 清华源 focal 2004 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse 清华源 focal 2204 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports ","date":"2023-12-11","objectID":"https://naonano.gitee.io/zhb.gitee.io/vmware%E8%99%9A%E6%8B%9F%E6%9C%BAklipper/:0:1","tags":["虚拟机安装Klipper"],"title":"VMware虚拟机安装klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/vmware%E8%99%9A%E6%8B%9F%E6%9C%BAklipper/"},{"categories":["机顶盒","Wifi","Linux","Hinas"],"content":"参考链接 引用\r参考链接：\rhttps://bbs.histb.com/d/18-wifi\r相关文件下载地址：\r链接：https://pan.baidu.com/s/10QmX6Z4mb_p_9SdOC4BMUQ\r提取码：q1xj\r本文仅适用于his-mv100系列 ","date":"2023-12-08","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%9C%BA%E9%A1%B6%E7%9B%92%E7%8E%A9%E5%AE%A2%E4%BA%91%E7%AD%89%E8%AE%BE%E5%A4%87%E6%BF%80%E6%B4%BBhinas%E7%9A%84wifi%E5%8A%9F%E8%83%BD/:0:1","tags":["机顶盒折腾"],"title":"机顶盒玩客云等设备激活hinas的wifi功能","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%9C%BA%E9%A1%B6%E7%9B%92%E7%8E%A9%E5%AE%A2%E4%BA%91%E7%AD%89%E8%AE%BE%E5%A4%87%E6%BF%80%E6%B4%BBhinas%E7%9A%84wifi%E5%8A%9F%E8%83%BD/"},{"categories":["机顶盒","Wifi","Linux","Hinas"],"content":"操作步骤 在root用户下操作！ su - root 将下载的文件用u盘插到设备上执行, 进入文件夹内 dd if=hi_kernel-mv100-0808.bin of=/dev/mmcblk0p6 重启设备 然后执行 ./wifi_install.sh -f rtl8188ftv-0808.tar.gz 使用nmtui-connect连接wifi 之后拔掉网线, 重启设备, 在路由器后台查看设备ip ","date":"2023-12-08","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%9C%BA%E9%A1%B6%E7%9B%92%E7%8E%A9%E5%AE%A2%E4%BA%91%E7%AD%89%E8%AE%BE%E5%A4%87%E6%BF%80%E6%B4%BBhinas%E7%9A%84wifi%E5%8A%9F%E8%83%BD/:0:2","tags":["机顶盒折腾"],"title":"机顶盒玩客云等设备激活hinas的wifi功能","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%9C%BA%E9%A1%B6%E7%9B%92%E7%8E%A9%E5%AE%A2%E4%BA%91%E7%AD%89%E8%AE%BE%E5%A4%87%E6%BF%80%E6%B4%BBhinas%E7%9A%84wifi%E5%8A%9F%E8%83%BD/"},{"categories":["Klipper"],"content":"3D打印机暂停和恢复打印代码 [gcode_macro PAUSE] rename_existing: BASE_PAUSE gcode: {% set E = params.E|default(1.7)|float %} {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %} {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %} {% set max_z = printer.toolhead.axis_maximum.z|float %} {% set act_z = printer.toolhead.position.z|float %} {% if act_z \u003c (max_z - 2.0) %} {% set z_safe = 2.0 %} {% else %} {% set z_safe = max_z - act_z %} {% endif %} SAVE_GCODE_STATE NAME=PAUSE_state BASE_PAUSE G91 G1 E-{E} F2100 G1 Z{z_safe} F900 G90 G0 X{x_park} Y{y_park} F6000 G91 [gcode_macro RESUME] rename_existing: BASE_RESUME gcode: {% set E = params.E|default(1)|float %} # edit to your preferred retract length G91 G1 E{E} F2100 G90 RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 BASE_RESUME ","date":"2023-12-02","objectID":"https://naonano.gitee.io/zhb.gitee.io/pause_resume/:0:1","tags":["klipper配置代码"],"title":"klipper暂停和恢复打印配置代码","uri":"https://naonano.gitee.io/zhb.gitee.io/pause_resume/"},{"categories":["树莓派","Linux"],"content":"\r技巧\r用于备份搭建了很多服务的树莓派系统，防止人为损坏系统导致需要重头开始搭建服务. 最好的方案就是采用：win32disk全盘备份+vmware虚拟机ubuntu-desktop用gparted删去无用分区+用pishink脚本压缩 总体思路：gparted删去无用分区-\u003ewin32disk读取(仅读取已分配分区)-\u003epishrink脚本压缩镜像 ","date":"2023-11-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/:0:0","tags":["镜像备份"],"title":"树莓派镜像备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/"},{"categories":["树莓派","Linux"],"content":"参考链接 引用\rhttps://blog.csdn.net/sinat_16643223/article/details/108346538\rhttps://blog.csdn.net/hezuijiudexiaobai/article/details/117132274\rhttps://github.com/Drewsif/PiShrink\rhttps://sourceforge.net/projects/win32diskimager/\rhttps://www.cnblogs.com/bongem/p/12312878.html#\r","date":"2023-11-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/:0:1","tags":["镜像备份"],"title":"树莓派镜像备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/"},{"categories":["树莓派","Linux"],"content":"操作步骤 ","date":"2023-11-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/:0:2","tags":["镜像备份"],"title":"树莓派镜像备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/"},{"categories":["树莓派","Linux"],"content":"镜像裁剪 方法一 在Linux虚拟机操作： 将树莓派内存卡插上电脑虚拟机 sudo apt install gparted 输入sudo gparted启动gparted，在右上角选择 SD 卡 将最大分区umount之后点击reszie，设置new size的值，然后保存，弹出内存卡到主机 方法二 全卡备份： 2.在电脑桌面或其他地方新建一个文本，重命名改格式为backup.img 3.打开win32-disk烧录软件,选择新建的back.img文件，选择要备份的树莓派内存卡，勾选‘读取已分配内存分区’的选项，点击read读取镜像 ","date":"2023-11-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/:0:3","tags":["镜像备份"],"title":"树莓派镜像备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/"},{"categories":["树莓派","Linux"],"content":"镜像压缩 将方法一或方法二读取的镜像backup.img上传到Linux系统上 cd git clone https://github.com/Drewsif/PiShrink.git cd PiShrink sudo chmod 777 pishrink.sh 在backup.img所在目录下操作: sudo cp /home/pi/PiShrink/pishrink.sh ./ sudo ./pishrink.sh backup.img backup_v2.img 等待镜像裁剪完成 将裁剪完成的镜像拷贝上电脑准备烧录 使用树莓派镜像烧录软件将裁剪后的backup_v2.img烧录进新内存卡，记得清空烧录软件对系统的设置, 等待烧录完成，重新插到树莓派开机观察是否正常。 ","date":"2023-11-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/:0:4","tags":["镜像备份"],"title":"树莓派镜像备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/"},{"categories":["树莓派","Linux"],"content":"新学指令 每额定时间执行一次命令： watch -n time(s) command 例如：watch -n 1 ls -l #每秒打印一次当前目录的所有文件属性 ","date":"2023-11-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/:0:5","tags":["镜像备份"],"title":"树莓派镜像备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD/"},{"categories":["NanoPi","Linux"],"content":"摘要 引用\r参考链接:\rhttps://zhuanlan.zhihu.com/p/423773714\rhttps://github.com/friendlyarm/WiringNP\rhttps://github.com/friendlyarm/RPi.GPIO_NP\r","date":"2023-11-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E5%AE%89%E8%A3%85gpio%E5%92%8Cpython%E7%9A%84rpi.gpio_np%E5%BA%93/:0:1","tags":["Linux开发板折腾"],"title":"nanopi安装gpio和python的RPi.GPIO_NP库","uri":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E5%AE%89%E8%A3%85gpio%E5%92%8Cpython%E7%9A%84rpi.gpio_np%E5%BA%93/"},{"categories":["NanoPi","Linux"],"content":"nanopi支持安装gpio和RPi.GPIO_NP库的板子型号有: NanoPi Neo NanoPi Neo Air NanoPi Duo NanoPi Duo2 NanoPi NEO2 NanoPi NEO Plus2 NanoPi M1 NanoPi M1 Plus NanoPi NEO Core NanoPi NEO Core2 NanoPi K1 Plus NanoPC T3 ","date":"2023-11-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E5%AE%89%E8%A3%85gpio%E5%92%8Cpython%E7%9A%84rpi.gpio_np%E5%BA%93/:0:2","tags":["Linux开发板折腾"],"title":"nanopi安装gpio和python的RPi.GPIO_NP库","uri":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E5%AE%89%E8%A3%85gpio%E5%92%8Cpython%E7%9A%84rpi.gpio_np%E5%BA%93/"},{"categories":["NanoPi","Linux"],"content":"操作步骤 安装WiringNP git clone https://github.com/friendlyarm/WiringNP cd WiringNP/ chmod 755 build ./build 测试： gpio readall 安装RPi.GPIO_NP 不同python版本方法有差异: python2.7操作： sudo apt-get update sudo apt-get install python-dev git clone https://github.com/friendlyarm/RPi.GPIO_NP cd RPi.GPIO_NP python setup.py install sudo python setup.py install python3如下： sudo apt-get update sudo apt-get install python-dev git clone https://github.com/friendlyarm/RPi.GPIO_NP cd RPi.GPIO_NP python3 setup.py install sudo python3 setup.py install 测试： python3 import RPi.GPIO ","date":"2023-11-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E5%AE%89%E8%A3%85gpio%E5%92%8Cpython%E7%9A%84rpi.gpio_np%E5%BA%93/:0:3","tags":["Linux开发板折腾"],"title":"nanopi安装gpio和python的RPi.GPIO_NP库","uri":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E5%AE%89%E8%A3%85gpio%E5%92%8Cpython%E7%9A%84rpi.gpio_np%E5%BA%93/"},{"categories":["Linux","Ubuntu","问题记录"],"content":"问题及解决 修改/etc/sudoers文件发现显示/etc/sudoers is meant to be readonly的警告： 使用visudo指令修改： sudo visudo vmware下开了共享文件夹却找不到，需要手动挂载一下： sudo mount -t fuse.vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other ","date":"2023-11-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/ubuntu%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/:0:1","tags":["Ubuntu记录"],"title":"ubuntu操作记录","uri":"https://naonano.gitee.io/zhb.gitee.io/ubuntu%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"},{"categories":["NanoPi","问题记录","Linux"],"content":"摘要 引用\r- nanopi使用ubuntu16.04无法更新系统问题\r因为1604系统比较古老，要使用apt-get update确避免问题，直接用apt update可能出现未知问题\r- 参考链接\rhttps://blog.csdn.net/qq_42520160/article/details/100159233\r","date":"2023-11-21","objectID":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E4%BD%BF%E7%94%A8ubuntu16.04%E6%97%A0%E6%B3%95%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98/:0:1","tags":["Linux开发板折腾"],"title":"nanopi使用ubuntu16.04无法更新系统问题","uri":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E4%BD%BF%E7%94%A8ubuntu16.04%E6%97%A0%E6%B3%95%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98/"},{"categories":["NanoPi","问题记录","Linux"],"content":"问题及解决方法 问题点 换源清华源之后，使用sudo apt-get update报错找不到IP地址 E: Some index files failed to download. They have been ignored, or old ones used instead. 问题是404 not found 找不到网页，起初我以为是DNS的问题，修改/etc/resolv.conf 但是还是有问题，最后看源码的确是没这几个文件，所以是源的问题，换了国内其他几个常用源后还是有问题。 查资料后发现中科大还提供old_release 解决方法 覆盖原本/etc/apt/sources.list内容如下： deb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu/ zesty main universe # Ubuntu Update Repos deb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu/ zesty-updates main universe 然后使用： sudo apt-get update sudo apt-get upgrade ","date":"2023-11-21","objectID":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E4%BD%BF%E7%94%A8ubuntu16.04%E6%97%A0%E6%B3%95%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98/:0:2","tags":["Linux开发板折腾"],"title":"nanopi使用ubuntu16.04无法更新系统问题","uri":"https://naonano.gitee.io/zhb.gitee.io/nanopi%E4%BD%BF%E7%94%A8ubuntu16.04%E6%97%A0%E6%B3%95%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98/"},{"categories":["Linux","v2ray"],"content":"摘要 引用\r通用于ubuntu-debian-raspibian等Linux系统，amd64-arm64(aarch64)-armhf(armv7)架构\r- 参考链接\rhttps://www.sky350.com/1210.html\rhttps://github.com/v2fly/fhs-install-v2ray\rhttps://v2raya.org/en/docs/prologue/installation/debian/#method-2-manually-install-the-deb-package\rhttps://github.com/v2rayA/v2rayA/releases\rhttps://github.com/v2rayA/v2raya-apt/tree/master/pool/main/v\rhttps://blog.csdn.net/Albert233333/article/details/128996452\r","date":"2023-11-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/linux%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAv2ray-v2ray2a%E8%AE%B0%E5%BD%95/:0:1","tags":["Linux折腾"],"title":"Linux系统搭建v2ray-v2ray2a记录","uri":"https://naonano.gitee.io/zhb.gitee.io/linux%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAv2ray-v2ray2a%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","v2ray"],"content":"操作步骤 (因为外网在线安装不稳定，所以本教程是手动下载安装) 根据系统架构在以下网站，分别下载对应版本v2ray和v2raya的deb包： https://github.com/v2rayA/v2raya-apt/tree/master/pool/main/v 将下载好的deb包上传到要安装的Linux系统上的home用户目录下(/home/username)： 给与deb包权限(这里以amd64为例) sudo chmod 777 v2raya_2.2.4.3_amd64.deb sudo chmod 777 v2ray_5.10.1_amd64.deb 安装 sudo dpkg -i v2ray_5.10.1_amd64.deb sudo dpkg -i v2raya_2.2.4.3_amd64.deb 设置开机自启动： sudo systemctl enable v2ray.service sudo systemctl enable v2raya.service 启动： sudo systemctl start v2ray.service sudo systemctl start v2raya.service 测试 网页输入： ip:2017 第一次进入页面需要设置一个管理员账号 例如：账号admin 密码admin123 忘记密码可在Linux终端重置：sudo v2raya --reset-password 输入订阅地址，点击更新订阅 在右上角设置里面更改为\"启用：大陆白名单模式\"，返回订阅列表中ping一下延迟，选择一个订阅 然后点击左上角的启动，打开linux自带的浏览器访问外网即可 终端下可以用： wget youtube.com \u003cbr\u003e 看是否能下载index.html文件 ","date":"2023-11-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/linux%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAv2ray-v2ray2a%E8%AE%B0%E5%BD%95/:0:2","tags":["Linux折腾"],"title":"Linux系统搭建v2ray-v2ray2a记录","uri":"https://naonano.gitee.io/zhb.gitee.io/linux%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAv2ray-v2ray2a%E8%AE%B0%E5%BD%95/"},{"categories":[],"content":" 张浩彬BinByZhang 嵌入式工程师 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:0","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 意向城市: 惠州 / 广州 / 深圳 男 / 2000.12.22 19878651849 2231637869@qq.com kikiortiti ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:1","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 教育背景 Education Background 广州软件学院 - 电子系 - 电子信息工程（本科全日制） 2019/09/01至 2023/07/01 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:2","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 自我评价 Self-evaluation 本人有志从事嵌入式开发工作，接受新事物较快，富有团队合作精神。在校期间多次组建团队研究嵌入式开发项目，参与学校举办的嵌入式竞赛，主动学习和接触行业相关的单片机和开发工具。工作之余，经常浏览嵌入式开源项目，复刻开源项目，在二手平台提供linux技术支持的服务，有偿协助网友排除和解决树莓派或其他运行linux的板子系统运行时出现的故障，以及3d打印机故障排查解决问题。 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:3","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 专业技能 Professional Skills 熟悉万用表/示波器/焊笔/热风枪/加热台/可编程电子负载仪 等工具的使用，能够独立绘制PCB(基于立创eda) 熟悉基础电子电路知识，能够配置和使用I2C/RS232/RS485/UART/SPI等常用嵌入式总线 熟悉常见单片机(STC/STM32/ESP32/ESP8266等)的GPIO配置和实际运用，嵌入式烧录夹具的使用 熟悉常见Linux开发板(树莓派/香橙派/工控机/Khadas VIM3/Nanopi等)的系统安装、调试、配置、故障维护 熟悉Ubuntu/Debian/Centos/Raspi-os/Armbian等常见Linux发行版系统的安装、配置、操作、故障维护 熟悉Vscode/Keil/Source-insign/Beyondcompare/VMWare等软件使用、掌握C语言、了解Python语法 熟悉3d打印机的组装、调试、操作及模型切片软件的使用，能够使用Fusion360和Solidwork进行简单建模 掌握Ps/Pr/Office办公软件/微信公众号运营等操作，使用SublimeText + Gitee仓库的方式记录开发日志 了解嵌入式实时操作系统RTOS(FreeRtos/UIICOS)、Linux内核编译移植环境搭建、Linux嵌入式驱动开发流程 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:4","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 工作经历 Work Experience 私密信息，招聘请联系本人获取简历，感谢关注！ ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:5","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 在校获奖 Awards \u0026 Honor 2023年广州软件学院学生奖学金三等奖 (2023.05) 2021年广州软件学院专项奖学金三等奖 (2021.11) 2020年广州软件学院学生奖学金三等奖 (2020.10) 广东省大学生计算机设计大赛三等奖 (2022.03) 广州软件学院第八届灯光节大赛一等奖 (2021.11) 广州软件学院第十四届电子设计大赛二等奖 (2021.09) 广州软件学院第十二届嵌入式技术竞赛三等奖 (2021.10) 广州软件学院2022优秀防疫志愿者 (2022.05) ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:6","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":" 在校项目经历 Project Experience 项目名称：基于树莓派opencv的智能门禁系统 项目时间：2022.05 - 2022.07 项目描述：使用python开发的基于树莓派平台智能门禁系统 实现效果：基于树莓派搭建python3环境，调用python的opencv库实现简单的人脸识别功能，调用WritingPi库使用树莓派GPIO驱动外部继电器，一旦检测录入的人脸则控制继电器导通电机运行，实现开门的效果。同时使用蜂鸣器作为警报单元，如检测人脸与人脸库不符则发出警报声。经反复测试本系统可达到80%的准确率。 项目重点收获：学习到Linux下Opencv库的使用，Linux开发板GPIO口的使用。 项目名称：基于Khadas VIM3的家庭流媒体NAS服务器 项目时间：2023.02 - 2023.05 项目描述：基于ARM架构工控机的家庭多媒体文件共享服务器 实现效果：基于Linux系统手动搭建，Samba局域网文件分享服务、Webmin服务器性能可视化界面、Emby网页影音播放器、Klipper的3D打印机控制系统、Alist网页云盘挂载服务用于整合云盘和本地SMB分享服务、Transmission和aria2的下载器功能、使用Heimdall整合网页导航界面。 项目重点收获：学习到Linux下各个文件服务的搭建和整合，了解到Linux的服务搭建步骤。 项目名称：基于STM32的家庭环境检测助手 项目时间：2024.02 - 2024.03 项目描述：项目具备温湿度采集、烟雾含量、有毒气体浓度采集，数据异常警报，语音播报，数据可视化等功能 实现效果：STM32使用单总线与DHT11传感器通信获取环境温湿度值，使用STM32的A/D采集引脚采集MQ2传感器的烟雾含量/有害气体浓度，使用USART串口通信协议将数据传输给SYN6288语音播报模块对数据进行播报/数据异常警报，使用STM32的硬件SPI驱动1.8寸的TFTLCD屏幕对数据进行实时的显示，数据变化曲线的显示。 项目重点收获：学习到STM32的外设使用，端口配置，USART，SPI，A/D转换，单总线协议的使用。 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:7","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":[],"content":"未来，持续完善…… ……","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/self/:0:8","tags":[],"title":"关于博主","uri":"https://naonano.gitee.io/zhb.gitee.io/self/"},{"categories":["Linux","软路由"],"content":"参考链接 引用\rhttps://www.yuque.com/taizhourenjia/rlf0nw/crkhri\rhttps://zhuanlan.zhihu.com/p/526289100\r","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:1","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"相关域名 pve主页： https://ip:8006 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:2","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"安装pve 镜像下载地址：https://www.proxmox.com/en/downloads 安装教程：https://blog.csdn.net/xuehu96/article/details/128888993 换源：https://www.jianshu.com/p/6a4cbe2c417e x86派论坛大佬脚本：https://bbs.x86pi.cn/thread?topicId=20 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:3","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"openwrt相关固件收集x86 相关知识： https://zhuanlan.zhihu.com/p/425228726 安装教程： https://post.smzdm.com/p/apze0rw2/ 记得进入op系统之后先在后台修改lan的ip和本地网络同个网段才能够浏览器进入后台 vi /etc/config/network 修改后重启即可 旁路由设置： https://www.right.com.cn/FORUM/thread-4181997-3-1.html 机场插件设置： https://233network.gitbook.io/untitled/lu-you-qi-duan/passwallpasswall2-she-zhi ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:4","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"收集的openwrt固件种类 sirpdboy版本固件，种类齐全，有电报交流群 https://github.com/sirpdboy/openwrt https://www.right.com.cn/forum/thread-8250453-1-1.html 恩山lusty大佬版本 https://www.right.com.cn/forum/forum.php?mod=viewthread\u0026tid=8294462\u0026extra=page%3D1\u0026page=1 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:5","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"安装群晖(内含docker、nas、jellyfin) 教程： https://zhuanlan.zhihu.com/p/639066104 https://zhuanlan.zhihu.com/p/634635408 https://github.com/fbelavenuto/arpl https://github.com/wjz304/arpl-zh_CN?tab=readme-ov-file https://kb.synology.cn/zh-cn/DSM/tutorial/Why_cant_I_connect_to_Package_Center 设置显卡直通： https://www.right.com.cn/FORUM/thread-5647264-1-1.html ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:6","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"安装ubuntu-server ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:7","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"安装ubuntu-desktop ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:8","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"安装win10 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:9","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"安装MAC黑苹果系统 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:10","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["Linux","软路由"],"content":"问题记录 无法识别m.2 NVME固态硬盘的问题(bios和安装系统界面皆看不到) 检查BIOS中的Chipset-\u003ePCI Express Configuration-\u003ePCI Express Root Port是否开启 如果还不行就关闭安全启动试试，还不可以那就说明不兼容 ","date":"2023-11-18","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/:0:11","tags":["马捷J4125"],"title":"马捷J4125软路由相关记录","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A9%AC%E6%8D%B7j4125%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"},{"categories":["heimdall"],"content":"参考链接 引用\rdocker镜像中文网：https://linuxserver.watercalmx.com/images/\r汉化教程网址：https://post.smzdm.com/p/apz38pg0/\r","date":"2023-11-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/heimdall_install/:1:0","tags":["heimdall搭建"],"title":"Heimdall导航页面搭建","uri":"https://naonano.gitee.io/zhb.gitee.io/heimdall_install/"},{"categories":["heimdall"],"content":"操作步骤 先百度安装docker，arm64v8要替换成自己的架构 docker pull linuxserver/heimdall:arm64v8-latest mkdir /home/zhb/docker/heimdall 执行以下指令启动docker镜像： docker run -d --name=heimdall --restart=always -p 81:80 -p 442:443 -v /home/zhb/docker/heimdall:/config -e PUID=1000 -e PGID=1000 -e TZ=Asia/Shanghai linuxserver/heimdall:arm64v8-latest 注意：以上81为网页登陆端口，防止端口占用可修改为自己的端口 ","date":"2023-11-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/heimdall_install/:2:0","tags":["heimdall搭建"],"title":"Heimdall导航页面搭建","uri":"https://naonano.gitee.io/zhb.gitee.io/heimdall_install/"},{"categories":["heimdall"],"content":"常用docker操作指令 删除指定容器： docker rm -f \u003ccontainerid\u003e 删除未启动成功的容器： docker rm $(docker ps -a|grep Created|awk '{print $1}') 删除退出状态的容器： docker rm $(docker ps -a|grep Exited|awk '{print $1}') 删除所有未运行的容器： docker rm $(docker ps -a -q) #正在运行的删除不了，所有未运行的都被删除了 ","date":"2023-11-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/heimdall_install/:3:0","tags":["heimdall搭建"],"title":"Heimdall导航页面搭建","uri":"https://naonano.gitee.io/zhb.gitee.io/heimdall_install/"},{"categories":["树莓派","Linux","问题记录"],"content":"参考链接 引用\r参考链接:\rhttps://blog.csdn.net/zhangjunhit/article/details/80569097#\r相关问题点记录 树莓派配置远程桌面 实测vnc并不实用，所以这里采用新方法 参考链接：https://blog.csdn.net/siri99999/article/details/110704597 操作步骤： sudo apt-get install xrdp tightvncserver sudo /etc/init.d/xrdp restart 然后使用win10/win11自带的远程桌面连接树莓派ip即可 树莓派4B使用最新版本安装wiringpi报错 原因：wiringpi过久没更新，与最新版本的树莓派系统不兼容，安装之后会出现无法访问/proc/cpuinfo的错误且无法解决，直接使用pip3 install wiringpi可能之后gpio -v报错：Oops - unable to determine board type... model: 17 解决方法： 使用20年版本的树莓派镜像或者更久的镜像，然后安装wiringpi cd wget https://project-downloads.drogon.net/wiringpi-latest.deb sudo dpkg -i wiringpi-latest.deb Linux下序号重命名文件： i=1; for x in *; do mv $x $i.png; let i=i+1; done 树莓派换源之后运行apt update显示NO_PUBKEY sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 公钥 ","date":"2023-11-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%973/:0:1","tags":["树莓派操作"],"title":"树莓派操作指南3","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%973/"},{"categories":["Gitee"],"content":"摘要 引用\rmarkdown2pdf项目地址：https://gitee.com/codeleilei/markdown2pdf.git\rlinux安装nginx教程：https://blog.csdn.net/weixin_43314519/article/details/115151858\rmarkdown语法教程：https://markdown.com.cn/basic-syntax/images.html\r本教程所有操作基于ubuntu23.04版本 ","date":"2023-11-01","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E7%AE%80%E5%8E%86%E5%88%B6%E4%BD%9C%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA/:1:0","tags":["简历制作"],"title":"Gitee简历制作网页搭建","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E7%AE%80%E5%8E%86%E5%88%B6%E4%BD%9C%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA/"},{"categories":["Gitee"],"content":"操作步骤 确保ubuntu系统安装了git，之后步骤如下： 1.下载项目到本地 git clone https://gitee.com/codeleilei/markdown2pdf.git 2.安装项目依赖 cd markdown2pdf\rsudo apt-get install nodejs npm\r查看node版本：\rnode -v //确保node版本在16以上\rsudo npm install pnpm -g\rsudo pnpm install\rsudo pnpm build //这句可以不执行\r之后尝试运行测试：\rsudo pnpm dev\r本机浏览器输入localhost:5173能够正常进去即为成功\r3.部署到nginx服务器 sudo apt install nginx cd /var/www/html 删除该目录下原本的测试文件， 将markdown2pdf/dist内的所有文件复制到/var/www/html， 再次浏览器进入ubuntu的ip能够成功访问即可 ","date":"2023-11-01","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E7%AE%80%E5%8E%86%E5%88%B6%E4%BD%9C%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA/:2:0","tags":["简历制作"],"title":"Gitee简历制作网页搭建","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E7%AE%80%E5%8E%86%E5%88%B6%E4%BD%9C%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA/"},{"categories":["Klipper","Linux","香橙派","触摸屏"],"content":"\r技巧\r香橙派驱动树莓派5-7寸触摸屏\r系统最好是ubuntu\rklipperscreen官方网址:\rhttps://klipperscreen.readthedocs.io/en/latest/\r","date":"2023-10-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A6%99%E6%A9%99%E6%B4%BE%E9%A9%B1%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE5-7%E5%AF%B8%E8%A7%A6%E6%91%B8%E5%B1%8F/:0:0","tags":["Klipper驱动屏幕"],"title":"香橙派驱动树莓派5-7寸触摸屏","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A6%99%E6%A9%99%E6%B4%BE%E9%A9%B1%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE5-7%E5%AF%B8%E8%A7%A6%E6%91%B8%E5%B1%8F/"},{"categories":["Klipper","Linux","香橙派","触摸屏"],"content":"操作步骤 正常安装klipper、fluid、moonraker git clone https://gitee.com/miroky/kiauh.git sudo ./kiauh 安装桌面驱动： sudo apt install xserver-xorg-input-libinput 安装中文字库： sudo apt install fonts-wqy-zenhei 安装摄像头驱动，需要先卸载meg数据流重装、安装klipperscreen bash \u003c(curl -fsSL http://klipper.7130404.xyz:8001/add_webcam.sh) 重启 ","date":"2023-10-30","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E9%A6%99%E6%A9%99%E6%B4%BE%E9%A9%B1%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE5-7%E5%AF%B8%E8%A7%A6%E6%91%B8%E5%B1%8F/:0:1","tags":["Klipper驱动屏幕"],"title":"香橙派驱动树莓派5-7寸触摸屏","uri":"https://naonano.gitee.io/zhb.gitee.io/%E9%A6%99%E6%A9%99%E6%B4%BE%E9%A9%B1%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE5-7%E5%AF%B8%E8%A7%A6%E6%91%B8%E5%B1%8F/"},{"categories":["Gitee"],"content":"参考链接 引用\rhttps://blog.csdn.net/m0_45234510/article/details/120181503\rhttps://blog.csdn.net/m0_51411338/article/details/124380516\r","date":"2023-10-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/:1:0","tags":["Gitee使用"],"title":"Gitee使用记录","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"},{"categories":["Gitee"],"content":"日常更新仓库命令 git status git add . git commit -m \"240112update\" git push -u origin \"master\" 或强制更新 git push --force origin master 拉取远程仓库、更新本地仓库到最新代码： git pull origin master ","date":"2023-10-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/:2:0","tags":["Gitee使用"],"title":"Gitee使用记录","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"},{"categories":["Gitee"],"content":"将本地文件同步到云端 在本地项目文件夹内操作\r初始化仓库：\rgit init\r连接远程仓库：\rgit remote add gitee https://gitee.com/naonano/xxx.git\r将文件发送到暂存区：\rgit add .\r提交本地暂存区：\rgit commit -m \"first commit\"\r上传到仓库：\rgit push -u origin \"master\"\r如果没有下拉过仓库代码想要直接用本地覆盖云端请使用：\rgit push -u --force origin \"master\"\r","date":"2023-10-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/:3:0","tags":["Gitee使用"],"title":"Gitee使用记录","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"},{"categories":["Gitee"],"content":"其他常用操作 更新仓库：\rgit push gitee master\rgit push github master\r查看远程仓库信息：\rgit remote -v\r查看本地文件夹文件同步状态：\rgit status\r删除与远程仓库关联：\rgit remote rm origin(这个名字的地方，根据自己的名字修改)\r","date":"2023-10-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/:4:0","tags":["Gitee使用"],"title":"Gitee使用记录","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"},{"categories":["Gitee"],"content":"问题及解决 1. 对于error: failed to push some refsto‘远程仓库地址’\rgit pull --rebase origin master\rgit push -u origin master\r2. 更新远程仓库时报错：![rejected] master -\u003e master (fetch first)\r这是由于本地与远程仓库版本不一致导致\r方法一：\r先备份本地修改的文件，使用以下命令拉取远程仓库\rgit pull --rebase origin master\r之后再重新同步\rgit pull origin master\r方法二：\r强制同步(注意！会覆盖云端代码)：\rgit push -f origin master 或 git push --force origin master ","date":"2023-10-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/:5:0","tags":["Gitee使用"],"title":"Gitee使用记录","uri":"https://naonano.gitee.io/zhb.gitee.io/gitee%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"},{"categories":["Klipper","PrusaMK3s"],"content":"摘要 摘要\rprusa mk3s配置klipper\r官方参考地址：\rhttps://github.com/dz0ny/klipper-prusa-mk3s\rhttps://github.com/dz0ny/klipper-prusa-mk3s/blob/main/printer.template.cfg\rhttps://klipperscreen.readthedocs.io/en/latest/Troubleshooting/\r","date":"2023-10-10","objectID":"https://naonano.gitee.io/zhb.gitee.io/prusa-mk3s%E9%85%8D%E7%BD%AEklipper/:0:1","tags":["Klipper安装"],"title":"Prusa mk3s配置klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/prusa-mk3s%E9%85%8D%E7%BD%AEklipper/"},{"categories":["Klipper","PrusaMK3s"],"content":"操作步骤 使用kiauh脚本安装klipperscreen、klipper、fluidd、moonraker git clone https://gitee.com/miroky/kiauh.git sudo ./kiauh 使用思谦脚本重新安装MEGASTEAM摄像头驱动 bash \u003c(curl -fsSL http://klipper.7130404.xyz:8001/add_webcam.sh) 3.配置mk3s打印机配置文件 复制配置文件： git clone https://github.com/dz0ny/klipper-prusa-mk3s.git ~/printer_data/config/klipper-prusa-mk3s 4.加入以下内容到moonraker.conf方便自动更新： [update_manager prusa] type: git_repo origin: https://github.com/dz0ny/klipper-prusa-mk3s.git path: ~/printer_data/config/klipper-prusa-mk3s primary_branch: main is_system_service: False managed_services: klipper 5.适配自己的打印机，修改配置文件的串口号，解决报错 6.使用kiauh烧录下位机固件 ","date":"2023-10-10","objectID":"https://naonano.gitee.io/zhb.gitee.io/prusa-mk3s%E9%85%8D%E7%BD%AEklipper/:0:2","tags":["Klipper安装"],"title":"Prusa mk3s配置klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/prusa-mk3s%E9%85%8D%E7%BD%AEklipper/"},{"categories":["Klipper","PrusaMK3s"],"content":"官方原版操作如下 1.prepare things： Get Z offset value from your current firmware (Menu -\u003e Calibration -\u003e Z-offset), you will need it for the Klipper config. Your bed needs to be perpendicular (based on XYZ Calibration). If not you will have to do the skew calibration before printing or you risk crashing your nozzle to the bed. Read https://github.com/dz0ny/klipper-prusa-mk3s/blob/main/printer.template.cfg Read https://www.klipper3d.org/Installation.html#building-and-flashing-the-micro-controller 2.Install： https://docs.mainsail.xyz/setup/mainsail-os to SDCard and RPI Zero 2 W Connect as described in https://help.prusa3d.com/en/article/raspberry-pi-zero-w-preparation-and-installation_2180 Update all components under Machine tab, otherwise config might not be able to load Clone config: git clone https://github.com/dz0ny/klipper-prusa-mk3s.git ~/printer_data/config/klipper-prusa-mk3s If you are adding this configuration after installing Klipper via KIAUH, the directory might be different - typically following ~/[printer_name]/printer_data/config, where [printer_name] is the name you selected during the Kiauh installation 3.Add the following to the to moonraker.conf to enable automatic updates: [update_manager prusa] type: git_repo origin: https://github.com/dz0ny/klipper-prusa-mk3s.git path: ~/printer_data/config/klipper-prusa-mk3s primary_branch: main is_system_service: False managed_services: klipper 4.Copy https://github.com/dz0ny/klipper-prusa-mk3s/blob/main/printer.template.cfg to printer.cfg in your klipper config 5.Adjust config to your hardware 6.Flash Klipper to your printer https://www.klipper3d.org/Installation.html#building-and-flashing-the-micro-controller You will still need a USB cable as you cannot flash via an internal serial port. You can also use any other computer to compile your firmware. 7.To use this config, the firmware should be compiled for the AVR atmega2560. To use via serial, in \"make menuconfig\" select \"Enable extra low-level configuration options\" and select serial1 (the RasPi serial) or serial0 when you plan to connect via the USB. 8.To flash: make flash FLASH_DEVICE=/dev/serial/by-id/usb-Prusa_Research__prusa3d.com__Original_Prusa_i3_MK3_CZPX0620X004XK70128-if00 ","date":"2023-10-10","objectID":"https://naonano.gitee.io/zhb.gitee.io/prusa-mk3s%E9%85%8D%E7%BD%AEklipper/:0:3","tags":["Klipper安装"],"title":"Prusa mk3s配置klipper","uri":"https://naonano.gitee.io/zhb.gitee.io/prusa-mk3s%E9%85%8D%E7%BD%AEklipper/"},{"categories":["Linux","Ubuntu","Ros"],"content":"摘要 信息\rubuntu不同版本对应的ros版本：\rUbuntu ROS1.0 ROS 2.0\r16.04LTS Kinetic LTS Ardent\r18.04LTS Melodic LTS Dashing LTS\r20.04LTS Noetic LTS Foxy LTS\r22.04LTS Noetic Ninjemys Humble Hawksbill\r","date":"2023-09-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/ubuntu2004%E5%AE%89%E8%A3%85ros/:0:1","tags":["Ros安装"],"title":"ubuntu2004安装ros","uri":"https://naonano.gitee.io/zhb.gitee.io/ubuntu2004%E5%AE%89%E8%A3%85ros/"},{"categories":["Linux","Ubuntu","Ros"],"content":"操作步骤 创建一个ros用户 sudo adduser ros （sudo userdel -r username） sudo usermod -a -G adm ros sudo usermod -a -G sudo ros sudo gpasswd --add ros dialout su - ros 修改镜像源 sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak sudo nano /etc/apt/sources.list 写入以下内容覆盖原文件，根据系统选择： Ubuntu 16.04 (LTS)代号为xenial Ubuntu 18.04 (LTS)代号为bionic Ubuntu 20.04 (LTS)代号为focal 输入lsb_release -a可以查看 清华源 xenial 1604 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse # deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse # # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse deb http://security.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse # deb-src http://security.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse 清华源 bionic 1804 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 清华源 focal 2004 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse 清华源 jammy 2204 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse # deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse # # deb-src https://mirrors.tuna.tsinghu","date":"2023-09-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/ubuntu2004%E5%AE%89%E8%A3%85ros/:0:2","tags":["Ros安装"],"title":"ubuntu2004安装ros","uri":"https://naonano.gitee.io/zhb.gitee.io/ubuntu2004%E5%AE%89%E8%A3%85ros/"},{"categories":["Arduino"],"content":"摘要 摘要\r/* For more information see https://github.com/maxint-rd/TM16xx\r* https://learn.adafruit.com/adafruit-gfx-graphics-library/graphics-primitives\r* 老五8毛钱的双色数码管功能代码,使用前需要先安装tm1640的库\r* matrix.setIntensity(1);//设置亮度，0-7档\r* matrix.drawPixel(x, y, HIGH);//坐标描点\r* drawPixel(int16_t x, int16_t y, uint16_t color);\r* x范围0-7，y范围0-15 ：其中0-7显示红色，8-15为绿色；\r* matrix.drawChar(0, 0, 'A', HIGH, LOW, 1);//字符绘制\r* matrix.drawLine(0, matrix.height(), matrix.width(), 0, HIGH);//绘线\r* matrix.drawRect(0, 0, 6, 6, HIGH);//矩形绘制\r* matrix.setMirror(boolean fMirrorX=false, boolean fMirrorY=false);//镜像翻转\r* matrix.fillScreen(LOW);//清屏\r* matrix.fillScreen(HIGH);//全亮\r* matrix.write();//写入显示\r*\r* 点阵坐标图如下：\r* y:15\r* ^\r* |\r* |GREEN\r* |\r* 8-------------------\r* |\r* |RED\r* |\r* 0-------------------\u003ex:7\r*/ ","date":"2023-08-26","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_try/:1:0","tags":["Arduino驱动外设"],"title":"Arduino驱动点阵数码管_TRY","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_try/"},{"categories":["Arduino"],"content":"代码如下 #include \u003cAdafruit_GFX.h\u003e #include \u003cTM1640.h\u003e #include \u003cTM16xxMatrixGFX.h\u003e TM1640 module(D1, D2); // DIN=9, CLK=10 #define MATRIX_NUMCOLUMNS 16 #define MATRIX_NUMROWS 8 TM16xxMatrixGFX matrix(\u0026module, MATRIX_NUMCOLUMNS, MATRIX_NUMROWS); // TM16xx object, columns, rows void setup() { matrix.setIntensity(2);//设置亮度，0-7档 } void loop() { for(int i = 0;i \u003c 9; i++){ for(int j = 8;j \u003e= 0; j--){ matrix.drawRect(i, i, j, j, HIGH); matrix.write(); delay(1000); } } matrix.fillScreen(LOW); } ","date":"2023-08-26","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_try/:2:0","tags":["Arduino驱动外设"],"title":"Arduino驱动点阵数码管_TRY","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_try/"},{"categories":["Arduino"],"content":"摘要 摘要\r本例程基于nodemcu 1.0 esp8266\r功能：读取电位器数值，控制输出的PWM占空比控制风扇\r","date":"2023-08-25","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_pwm/:1:0","tags":["Arduino驱动外设"],"title":"Arduino驱动无刷风扇_PWM","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_pwm/"},{"categories":["Arduino"],"content":"代码如下 int PWM = D1; int MIC = A0; float value = 0; float value_P; void setup() { Serial.begin(9600); pinMode(PWM, OUTPUT); pinMode(MIC, INPUT); Serial.println(\"Init All Success!\"); } void loop() { delay(200); value = analogRead(MIC); //8-1024 value_P = value/1024*255; //PWM Support: max: 235 min: 51 if(value_P \u003c 51) { analogWrite(PWM, 0); } if(value_P \u003e 235) { analogWrite(PWM, 235); } else { analogWrite(PWM, value_P); } Serial.printf(\"NGF %.2f %.0f\\n\",value,value_P); } ","date":"2023-08-25","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_pwm/:2:0","tags":["Arduino驱动外设"],"title":"Arduino驱动无刷风扇_PWM","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_pwm/"},{"categories":["Arduino"],"content":"摘要 摘要\r本例程基于nodemcu 1.0 esp8266\r需要根据头文件安装对应的库\r功能：读取电位器数值，OLED显示PWM输出占空比，\r控制输出的PWM占空比控制风扇，过高过低均会触发蜂鸣器\r","date":"2023-08-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_plus/:1:0","tags":["Arduino驱动外设"],"title":"Arduino驱动无刷风扇_Plus","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_plus/"},{"categories":["Arduino"],"content":"参考链接 https://www.bilibili.com/read/cv20778641 https://zhuanlan.zhihu.com/p/135170761?utm_source=qq ","date":"2023-08-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_plus/:2:0","tags":["Arduino驱动外设"],"title":"Arduino驱动无刷风扇_Plus","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_plus/"},{"categories":["Arduino"],"content":"代码如下 #include \u003cArduino.h\u003e #include \u003cWire.h\u003e #include \u003cAdafruit_GFX.h\u003e #include \u003cAdafruit_SSD1306.h\u003e #define PWM D1 #define MIC A0 #define SCL D6 #define SDA D5 #define BEEP D7 #define OLED_RESET 4 Adafruit_SSD1306 display(128, 64, \u0026Wire,OLED_RESET); float value = 0; float value_P; void setup() { Serial.begin(9600); pinMode(PWM, OUTPUT); pinMode(BEEP, OUTPUT); pinMode(MIC, INPUT); Wire.begin(SDA, SCL, 400000); display.begin(SSD1306_SWITCHCAPVCC,0x3C); display.setTextColor(WHITE);//开像素点发光 display.clearDisplay();//清屏 Serial.println(\"Init All Success!\"); } void loop() { delay(1000); value = analogRead(MIC); //8-1024 value_P = value/1024*255; //PWM Support: max: 235 min: 51 if(value_P \u003c 51) { analogWrite(PWM, 0); tone(BEEP, 2000, 500000); } if(value_P \u003e 235) { analogWrite(PWM, 235); tone(BEEP, 2000, 500000); } else { analogWrite(PWM, value_P); } display.clearDisplay(); display.setCursor(10, 10); display.setTextSize(2); display.println(\"PWM: \"); display.setCursor(10, 30); display.println(value_P); display.display(); Serial.printf(\"NGF %.2f %.0f\\n\",value,value_P); noTone(BEEP); } ","date":"2023-08-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_plus/:3:0","tags":["Arduino驱动外设"],"title":"Arduino驱动无刷风扇_Plus","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E6%97%A0%E5%88%B7%E9%A3%8E%E6%89%87_plus/"},{"categories":["Arduino"],"content":"摘要 摘要\r老五8毛钱的双色数码管测试代码\r使用前需要先安装tm1640的库\r","date":"2023-08-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_test/:1:0","tags":["Arduino驱动外设"],"title":"Arduino驱动点阵数码管_TEST","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_test/"},{"categories":["Arduino"],"content":"代码如下 /* Basic library example for TM1640. Kept small to fit in the limited space of an ATtiny44. Library based on TM1638 library by Ricardo Batista, adapted by Maxint-RD MMOLE 2018. Confirmed to work in the following environments: ATtiny44A using Arduino IDE 1.8.2 and ATTinyCore (8MHz, LTO enabled), 3232 bytes flash, 103 bytes RAM ATtiny44A using Arduino IDE 1.8.2 and ATtiny Microcontrolers (8MHz), 3212 bytes flash, 103 bytes RAM ==\u003e 2892/95 ==\u003e 2878/95 Only compiled: not tested yet: Arduino Nano using Arduino IDE 1.8.2, Nano (Old Bootloader)), 3176 bytes flash, 95 bytes RAM For more information see https://github.com/maxint-rd/TM16xx */ #include \u003cTM1640.h\u003e TM1640 module(D1, D2, 4); // SDA, SCL, 4 digits void setup() { module.setupDisplay(true, 2);//设置显示亮度，0-7档 module.setDisplayToDecNumber(12345678, 0xFF);//列显示 //module.sendChar(2, 0, true);//坐标点显示 } void loop() { for(int i=0; i\u003c8; i++) { module.sendChar(i, 0, false); delay(100); } for(int i=0; i\u003c8; i++) { //module.setupDisplay(true, i); for(int j=1; j\u003c=0xFF; j=j*2+1) { module.sendChar(i, j, true); delay(50); } } for(int i=8; i\u003c16; i++) { module.sendChar(i, 0, false); delay(100); } for(int i=8; i\u003c16; i++) { //module.setupDisplay(true, i); for(int j=1; j\u003c=0xFF; j=j*2+1) { module.sendChar(i, j, true); delay(50); } } } ","date":"2023-08-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_test/:2:0","tags":["Arduino驱动外设"],"title":"Arduino驱动点阵数码管_TEST","uri":"https://naonano.gitee.io/zhb.gitee.io/arduino%E9%A9%B1%E5%8A%A8%E7%82%B9%E9%98%B5%E6%95%B0%E7%A0%81%E7%AE%A1_test/"},{"categories":["NAS","Linux"],"content":"摘要 注意\r使用本系统需要基于x86主机，16G以上内存，带核显或独立显卡\r相关链接:\r指南：https://github.com/firemakergk/aquar-build-helper\rnas控制页面：https://github.com/firemakergk/aquar-home\rnas控制页面指南：https://github.com/firemakergk/aquar-home-helper\r","date":"2023-08-08","objectID":"https://naonano.gitee.io/zhb.gitee.io/nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/:0:1","tags":["nas搭建"],"title":"nas搭建指南","uri":"https://naonano.gitee.io/zhb.gitee.io/nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"},{"categories":["NAS","Linux"],"content":"samba配置模板 path = /home/pi/share public = yes writable = yes read only = no create mask = 0777 directory mask = 0777 guest ok = yes browseable = yes ","date":"2023-08-08","objectID":"https://naonano.gitee.io/zhb.gitee.io/nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/:0:2","tags":["nas搭建"],"title":"nas搭建指南","uri":"https://naonano.gitee.io/zhb.gitee.io/nas%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"},{"categories":["Klipper"],"content":"参考链接 引用\rhttps://www.bilibili.com/read/cv24075991/\rhttp://git.fysetc.com.cn/FYSETC/FYSETC-SPIDER/src/branch/main/%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3_%E4%B8%AD%E6%96%87.md#user-content-112-spider-v2x\r","date":"2023-08-02","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E8%9C%98%E8%9B%9Bspider2.3%E7%BC%96%E8%AF%91%E4%B8%8B%E4%BD%8D%E6%9C%BA%E5%9B%BA%E4%BB%B6/:0:1","tags":["Klipper下位机"],"title":"蜘蛛spider2.3编译下位机固件","uri":"https://naonano.gitee.io/zhb.gitee.io/%E8%9C%98%E8%9B%9Bspider2.3%E7%BC%96%E8%AF%91%E4%B8%8B%E4%BD%8D%E6%9C%BA%E5%9B%BA%E4%BB%B6/"},{"categories":["Klipper"],"content":"操作步骤 klipper编译固件 选择 STMicroelectronics STM32 选择 STM32F446 选择 12 MHz crystal 选择 32KiB bootloader 如果使用 USB 线连接树莓派和蜘蛛主板，选择选项 USB (on PA11/PA12),还需要改成no bootloader 如果使用串口连接树莓派和蜘蛛，选择选项 Serial (on USART1 PA10/PA9) 卡刷： 用 TF 进行固件更新，只需要把你编译好的 firmware.bin 文件（如果是 klipper 固件的话，默认生成 klipper.bin 你需要把 klipper.bin 改名成 firmware.bin拷贝到你的 TF 卡中，插入蜘蛛主板的 TF 卡槽中，给蜘蛛上电。指示灯开始闪烁表示开始烧录，TF 卡旁边的指示灯不再闪烁即烧录完成。拔下 TF 卡，然后插到电脑上，你会发现 firmware.bin 被重新命名为 old.bin，说明烧录成功。如果名称不变，说明没有烧录成功。 线刷： 第一步：进入 DFU 模式 首先断开电源 用跳线帽短接 5V 管脚和 DC5V 用跳线帽短接 BT0 和 3.3V 用 USB 线连接主板和你的电脑（或者树莓派） 上电 24v 现在主板已经在 DFU 模式了，如果没有请按一下蜘蛛的复位按钮. 除了 24V 供电，也可以用 USB 5V 供电，不过在上述2步时跳线帽需要短接 5V 管脚 和 USB5V（翻到主板背面可以看到丝印）。 烧录完成后，把 BT0 和 3.3V 跳线帽拔下 第二步：安装 dfu-util 软件 sudo apt-get install dfu-util 进入 DFU 模式之后，确认 dfu-util 软件安装好，可以用 dfu-util --version 命令进行查看，如果有以下类似的输出，则说明 dfu-util 安装好了。 第三步：发送上传命令 使用下列命令上传固件。但此之前，需要根据固件和bootloader 的情况，调整这个命令。如果是 klipper 固件，生成的固件一般在 out/klipper 把以下命令中的 firmware.bin 改成 out/klipper.bin，支持 hex 格式如 firmware.hex . 根据自己主板的 bootloader 的情况改变命令中的 0x08008000 部分。例如你采用的是 Marlin 固件，env 设定为 default_envs = FYSETC_S6 ，那么你需要把命令中的 0x08008000 改成0x08010000，如果 env 是 default_envs = FYSETC_S6_8000，则不需要修改。 如果你用的是 klipper 固件，并且 make menuconfig 的时候如果选择了 No bootloader, 需要把命令中的 0x08008000 改成0x08000000，如果选择了 32kiB bootloader，则不需要更改，如果选择了 64KiB bootloader, 需要把 0x08008000 改成0x08010000，如果是 hex 文件需要把 0x08008000 改成0x08000000. 烧录固件 dfu-util -R -a 0 -s 0x08008000:leave -D firmware.bin ","date":"2023-08-02","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E8%9C%98%E8%9B%9Bspider2.3%E7%BC%96%E8%AF%91%E4%B8%8B%E4%BD%8D%E6%9C%BA%E5%9B%BA%E4%BB%B6/:0:2","tags":["Klipper下位机"],"title":"蜘蛛spider2.3编译下位机固件","uri":"https://naonano.gitee.io/zhb.gitee.io/%E8%9C%98%E8%9B%9Bspider2.3%E7%BC%96%E8%AF%91%E4%B8%8B%E4%BD%8D%E6%9C%BA%E5%9B%BA%E4%BB%B6/"},{"categories":["树莓派","Linux"],"content":"参考链接 引用\rhttps://blog.csdn.net/aphero/article/details/81668058#\r","date":"2023-07-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%83%A8%E7%BD%B2%E6%91%84%E5%83%8F%E5%A4%B4%E5%88%B0onenet/:0:1","tags":["摄像头"],"title":"树莓派部署摄像头到onenet","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%83%A8%E7%BD%B2%E6%91%84%E5%83%8F%E5%A4%B4%E5%88%B0onenet/"},{"categories":["树莓派","Linux"],"content":"安装环境依赖 sudo apt-get install -y nodejs # nstall Node.js 14.x and npm sudo apt-get install gcc g++ make curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg \u003e/dev/null echo \"deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt-get update \u0026\u0026 sudo apt-get install yarn curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install gcc g++ make nodejs liblivemedia-dev libssl-dev git clone https://github.com/BreeeZe/rpos.git cd rpos npm install ./node_modules/gulp/bin/gulp.js sh setup_v4l2rtspserver.sh sudo cp rposConfig.sample-picam.json rposConfig.json sudo node rpos.js 之后就可以使用onvif device manager来查看摄像头实时传输的视频 可以登录http://ip:8081来修改配置（前面是树莓派的ip地址） 如果图像传输不稳定容易中断，可调低图像传输的分辨率。建议使用640*480或320*240 cd lib gedit camera.js 修改代码的第35行，将Width和Height分别修改为320和240就可以。 ","date":"2023-07-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%83%A8%E7%BD%B2%E6%91%84%E5%83%8F%E5%A4%B4%E5%88%B0onenet/:0:2","tags":["摄像头"],"title":"树莓派部署摄像头到onenet","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%83%A8%E7%BD%B2%E6%91%84%E5%83%8F%E5%A4%B4%E5%88%B0onenet/"},{"categories":["树莓派","Linux"],"content":"参考链接 引用\r参考链接：\rhttps://blog.csdn.net/weixin_41756645/article/details/126873748\rhttps://blog.csdn.net/Travel1992/article/details/115554449\rhttps://blog.csdn.net/qq_35475292/article/details/110497529\rhttps://blog.csdn.net/wanggao_1990/article/details/121398020\r","date":"2023-05-08","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%972-cm4%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/:0:1","tags":["树莓派CM4安装系统"],"title":"树莓派操作指南2-CM4安装系统","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%972-cm4%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/"},{"categories":["树莓派","Linux"],"content":"操作步骤 安装rpiboot软件 https://gitee.com/naonano/usbboot 下载安装win32里面的程序 短接cm4板子上的j2排针最左边的排针，用安卓数据线连接到电脑 运行rpiboot软件，之后电脑一般能够识别到u盘 如果不能请检查数据线和短接帽是否有问题 查看是否识别为u盘，使用raspi imager正常安装即可 ","date":"2023-05-08","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%972-cm4%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/:0:2","tags":["树莓派CM4安装系统"],"title":"树莓派操作指南2-CM4安装系统","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%972-cm4%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/"},{"categories":["Klipper"],"content":"参考链接 引用\r香橙派镜像下载地址：\rhttp://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/service-and-support/Orange-Pi-Zero-2.html\rcanbus-ebb刷机教程:\rhttps://www.bilibili.com/video/BV1tN4y1F7wo/?vd_source=83eaf6e4edc3987cb641faad4036a9f3\rN1盒子安装Armbian系统教程：\rhttps://www.right.com.cn/forum/thread-510423-1-1.html\rhttps://post.smzdm.com/p/alpwnxmp/\r","date":"2023-05-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/:0:1","tags":["Klipper安装"],"title":"Klipper安装指南","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/"},{"categories":["Klipper"],"content":"安装klipper sudo adduser klipper （sudo userdel -r username） sudo usermod -a -G adm klipper sudo usermod -a -G sudo klipper sudo gpasswd --add klipper dialout su - klipper sudo apt install git tree gcc g++ make cmake git clone https://github.com/th33xitus/kiauh.git 或 git clone https://gitee.com/miroky/kiauh.git(速度快) 安装摄像头失败的话可以用以下脚本安装： bash \u003c(curl -fsSL http://klipper.7130404.xyz:8001/add_webcam.sh) ","date":"2023-05-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/:0:2","tags":["Klipper安装"],"title":"Klipper安装指南","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/"},{"categories":["Klipper"],"content":"常用操作 换shell： cat /etc/shells sudo usermod -s /bin/bash username 或chsh -s /bin/bash 查看端口 ls /dev/serial/by-id/* 换源, 在以下链接选择自己的系统版本替换进/etc/apt/sources.list https://mirrors.tuna.tsinghua.edu.cn/help/debian/ 连接wifi sudo apt install net-tools nmtui-connect 更改python默认版本指向 sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1 修复apt安装依赖破碎： sudo apt --fix-broken install ","date":"2023-05-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/:0:3","tags":["Klipper安装"],"title":"Klipper安装指南","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/"},{"categories":["Klipper"],"content":"3D打印机常用操作 PID校准 热床：heat_bed TURN_OFF_HEATERS PID_CALIBRATE HEATER=heater_bed TARGET=60 SAVE_CONFIG 喷嘴：extruder TURN_OFF_HEATERS PID_CALIBRATE HEATER=extruder TARGET=200 SAVE_CONFIG klipper显示mcu+主板温度： [temperature_sensor server_temp] sensor_type: temperature_host min_temp: 0 max_temp: 100 [temperature_sensor mcu_temp] sensor_type: temperature_mcu min_temp: 0 max_temp: 100 ","date":"2023-05-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/:0:4","tags":["Klipper安装"],"title":"Klipper安装指南","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/"},{"categories":["Klipper"],"content":"armbian安装python3.8 sudo apt-get install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev sudo wget https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz sudo tar -zxvf Python-3.8.5.tgz cd Python-3.8.5 sudo ./configure --prefix=/usr/local/python3 \u0026\u0026 make \u0026\u0026 make install sudo ln -s /usr/local/python3/bin/python3 /usr/local/bin/python3 sudo ln -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3 ","date":"2023-05-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/:0:5","tags":["Klipper安装"],"title":"Klipper安装指南","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/"},{"categories":["Klipper"],"content":"3D打印机问题记录 问题： 无法识别到mcu串口(查找过后发现是串口权限问题，klipper用户一直无法打开串口) 将查看串口是否映射到了其他串口，检查该串口是否有权限读写 使用chmod 777 ttyACM0和chmod 777 /dev/serial/by-id/*提升权限即可解决 针对有些系统重启之后恢复权限的缺陷，完美解决方法： sudo nano /etc/rc.local #写入以下内容 sudo chown klipper /dev/tty* sudo chgrp klipper /dev/tty* sudo chmod 777 /dev/tty* 保存退出，输入sync同步一下 sudo reboot #重启系统查看是否正常 无法使用摄像头： 进入/kiauh/ 的mjpg-streamer目录下，尝试运行start.sh，如果出错，需要修改其中的显示语句， 并将脚本按照以下步骤写入开机启动文件： sudo nano /etc/rc.local 写入以下内容： cd /home/orangepi/mjpg-streamer ./start.sh 无法导入配置文件的错误：internal server err 一般是moonraker出了问题，数据库混乱或没有权限(常见) 解决：删除.moonraker_database或者重装之后登录网页在通知里输入密码即可 BLtouch自动调平 [bltouch] sensor_pin: ^PD2 control_pin: z_offset: x_offset: y_offset: 去除耗材残留，冷却到室温，先正常用纸调平 修改z轴position_min: -1 找一张10*10cm的纸，在中间点一个点，打印机x,y归位 移动挤出头的指针到点的位置，记录坐标，再移动3dtouch到点的位置，在打印机控制面板查看x/y的偏移,用现在的位置减去之前的位置(移动挤出头的指针到点的位置),填入x_offset/y_offset 先把Z_offset:1，复位打印机，之后探针会反复弹起， 测试正常工作： BLTOUCH_DEBUG COMMAND=pin_down BLTOUCH_DEBUG COMMAND=pin_up BLTOUCH_DEBUG COMMAND=pin_down BLTOUCH_DEBUG COMMAND=touch_mode QUERY_PROBE 手指触摸BLTOUCH看是否缩回 QUERY_PROBE查看是否触发 移动z轴远离热床 输入PROBE_CALIBRATE,探针弹出，z轴向下移动，然后触碰探针缩回，z轴停止，说明正常 问题：安装klipper时出现错误Creation of Klipper virtualenv failed! sudo apt remove virtualenv python-virtualenv python3-virtualenv sudo pip uninstall virtualenv sudo pip3 install setuptools sudo pip3 install virtualenv sudo apt install virtualenv python-virtualenv python3-virtualenv virtualenv --download -p python3 ~/klippy-env/ 之后重新运行kiauh脚本即可 问题：安装klipper时出现错误Creation of Moonraker virtualenv failed！ sudo apt remove virtualenv python-virtualenv python3-virtualenv sudo pip uninstall virtualenv sudo pip3 install setuptools sudo pip3 install virtualenv virtualenv --download -p python3 ~/moonraker-env/ 安装klipper的moonraker时出现The headers or library files could not be found for jpeg或The headers or library files could not be found for zlib问题，导致无法安装pillow 参考以下链接： https://pillow.readthedocs.io/en/latest/installation.html https://blog.csdn.net/lailaiquququ11/article/details/82904575 解决方法：手动安装即可 su - root wget http://www.zlib.net/zlib-1.3.tar.gz wget http://ijg.org/files/jpegsrc.v9e.tar.gz tar -zxvf zlib-1.3.tar.gz tar -zxvf jpegsrc.v9e.tar.gz 进入源码目录之后分别编译安装即可 ./configure make make install pip换源 python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 或 pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ ","date":"2023-05-05","objectID":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/:0:6","tags":["Klipper安装"],"title":"Klipper安装指南","uri":"https://naonano.gitee.io/zhb.gitee.io/klipper_install/"},{"categories":["Linux","Samba"],"content":"操作步骤 安装samba服务 sudo apt install samba 修改samba配置 sudo nano /etc/samba/smb.conf 在文件末尾加入以下内容： [share] path = /home/pi/share #共享文件夹的路径 public = yes #是否为公共属性 writable = yes #是否有写权限 read only = nano #是否只读 create mask = 0777 #文件夹属性 directory mask = 0777 #目录属性 valid users = public #文件夹用户属性 force user = pi force group = pi available = yes #是否可靠 guest ok = nano #是否支持匿名访客 browseable = yes #是否可被其他设备搜索到 创建共享文件夹 cd ~/ mkdir share 测试 win10系统按下win+r，输入： \\\\树莓派ip 手机端使用es文件浏览器访问 ","date":"2023-05-04","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85samba%E6%90%AD%E5%BB%BA/:0:1","tags":["samba搭建"],"title":"局域网内samba搭建","uri":"https://naonano.gitee.io/zhb.gitee.io/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85samba%E6%90%AD%E5%BB%BA/"},{"categories":["游戏机系统安装"],"content":"参考链接 引用\remuelec镜像下载地址：https://www.emuelec.cn/\rVIM3参考配置页面：\rhttps://docs.khadas.com/products/sbc/vim3/configurations/user-config\rhttps://khadas.github.io/linux/zh-cn/vim3/Gpio.html\rVIM3官方镜像包下载：https://dl.khadas.com/products/vim3/firmware/\r","date":"2023-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/khadas-vim3%E5%88%B7emcelec%E6%B8%B8%E6%88%8F%E7%B3%BB%E7%BB%9F%E8%AE%B0%E5%BD%95/:0:1","tags":["Emcelec游戏"],"title":"Khadas Vim3刷Emcelec游戏系统","uri":"https://naonano.gitee.io/zhb.gitee.io/khadas-vim3%E5%88%B7emcelec%E6%B8%B8%E6%88%8F%E7%B3%BB%E7%BB%9F%E8%AE%B0%E5%BD%95/"},{"categories":["游戏机系统安装"],"content":"操作步骤 vim3无法直接从sd卡启动，所以需要先在emmc安装安卓系统 下载官方安卓系统之后使用烧录工具usb burning烧录进emmc 下载emuelec整合包烧录到sd卡 这步操作一定要在第一次开机之前完成 这里可以烧录完用分区软件diskgenius对sd卡进行扩容 具体操作： 打开diskgenius软件，找到sd卡roms分区，右键选择‘调整分区大小’，进行修改即可。 启动emuelec系统 先启动一次emmc的安卓系统，之后正常关机 开机进入升级模式: 按住power+reset，上电 这时会自动进入sd卡系统，如果不行多试几次即可。 设置vim风扇自动开启 编辑开机启动脚本/storage/.config/custom_start.sh nano /storage/.config/custom_start.sh 在倒数第三行也就是esac和exit 0之前加上以下内容： echo 1 | tee /sys/class/fan/enable echo 0 | tee /sys/class/fan/level 保存并退出 reboot重启使修改生效。 ","date":"2023-02-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/khadas-vim3%E5%88%B7emcelec%E6%B8%B8%E6%88%8F%E7%B3%BB%E7%BB%9F%E8%AE%B0%E5%BD%95/:0:2","tags":["Emcelec游戏"],"title":"Khadas Vim3刷Emcelec游戏系统","uri":"https://naonano.gitee.io/zhb.gitee.io/khadas-vim3%E5%88%B7emcelec%E6%B8%B8%E6%88%8F%E7%B3%BB%E7%BB%9F%E8%AE%B0%E5%BD%95/"},{"categories":["三星手机","刷机","PostMarkeros"],"content":"准备 ubuntu虚拟机 / ubuntu实机 手机解锁BL ","date":"2023-01-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/s7%E5%88%B7%E6%9C%BApostmarketos%E6%8C%87%E5%8D%97/:0:1","tags":["手机刷机"],"title":"三星S7刷postmarkeros记录","uri":"https://naonano.gitee.io/zhb.gitee.io/s7%E5%88%B7%E6%9C%BApostmarketos%E6%8C%87%E5%8D%97/"},{"categories":["三星手机","刷机","PostMarkeros"],"content":"操作步骤 更新软件源 sudo apt-get update sudo apt-get upgrade 安装python3.8 sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz tar -xf Python-3.8.0.tgz cd Python-3.8.0 ./configure --enable-optimizations make -j 8 sudo make install 安装pmbootstrap git clone https://git.sr.ht/~postmarketos/pmbootstrap mkdir -p ~/.local/bin ln -s \"$PWD/pmbootstrap/pmbootstrap.py\" ~/.local/bin/pmbootstrap pmbootstrap --version 找不到环境则修改如下 sudo nano ~/.profile 加入以下内容: PATH=\"$HOME/.local/bin:$PATH\" 如果报错文件编码错误, 则修改文件编码 sudo vim xx.txt esc - : - set fileformat=unix 将手机用数据线连接上位机电脑, 启动pmbootstrap安装: pmbootstrap init pmbootstrap install fastboot devices ","date":"2023-01-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/s7%E5%88%B7%E6%9C%BApostmarketos%E6%8C%87%E5%8D%97/:0:2","tags":["手机刷机"],"title":"三星S7刷postmarkeros记录","uri":"https://naonano.gitee.io/zhb.gitee.io/s7%E5%88%B7%E6%9C%BApostmarketos%E6%8C%87%E5%8D%97/"},{"categories":["树莓派","Linux","问题记录"],"content":"相关操作记录 树莓派卸载原生桌面： sudo apt-get install deborphan sudo apt-get autoremove --purge libx11-.* lxde-.* raspberrypi-artwork xkb-data omxplayer penguinspuzzle sgml-base xml-core alsa-.* cifs-.* samba-.* fonts-.* desktop-* gnome-.* sudo apt-get autoremove --purge $(deborphan) sudo apt-get autoremove --purge sudo apt-get autoclean 树莓派换源： 仅需要打开/etc/apt/sources.list 将文件内前缀替换为：https://mirrors.tuna.tsinghua.edu.cn 即可 还需要根据系统版本修改/etc/apt/sources.list.d/raspi.list内容 参考链接：https://mirrors-i.tuna.tsinghua.edu.cn/help/raspberrypi/ deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main contrib non-free rpi 树莓派4安装ros–基于ubuntu-mate-20.04 镜像下载地址：https://releases.ubuntu-mate.org/20.04/arm64/ 清华镜像源：https://mirrors-i.tuna.tsinghua.edu.cn/# 安装ros的过程参考另外一篇笔记ubuntu2004安装ros 安装gnome桌面(mate桌面版不需要此操作)： sudo apt-get install gnome 卸载无用软件： sudo apt-get remove thunderbird* firefox deja-dup simple-scan hplip* printer-driver* rhythmbox* gedit* libreoffice* libreoffice-common gnome-orca mahjongg aisleriot gnome-sudoku gnomine wodim gnome-mines cheese 安装opencv： sudo apt-get install libopencv-dev sudo apt-get install python3-opencv 输入python3 import cv2 没报错即是成功。 树莓派ubuntu20.04换源：sudo nano /etc/apt/sources.list deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse 安装alist： sudo passwd root su - root curl -fsSL \"https://alist.nn.ci/v3.sh\" | bash -s install 使用ip：5244登录alist网页 用户admin, 在服务器端查看alist密码： cd /opt/alist ./alist password 安装家庭影院系统emby: 这里请根据系统架构选择， cd sudo wget https://github.com/MediaBrowser/Emby.Releases/releases/download/4.7.11.0/emby-server-deb_4.7.11.0_arm64.deb 可能github会上不去，修改hosts文件即可，sudo nano /etc/hosts 添加以下内容： 140.82.114.4 github.com 199.232.69.194 github.global.ssl.fastly.net 185.199.108.153 assets-cdn.github.com 185.199.110.153 assets-cdn.github.com 185.199.111.153 assets-cdn.github.com 也可以下载下来上传到树莓派上，之后安装： sudo chmod 766 emby-server-deb_4.7.11.0_arm64.deb sudo sudo dpkg -i emby-server-deb_4.7.11.0_arm64.deb 安装nas网页管理系统omv： sudo apt install git git clone https://github.com/OpenMediaVault-Plugin-Developers/installScript.git cd installScript sudo chmod +x install sudo ./install 安装heimdall 先百度安装docker docker pull linuxserver/heimdall:arm64v8-latest mkdir /home/zhb/docker/heimdall docker run -d --name=heimdall --restart=always -p 81:80 -p 442:443 -v /home/zhb/docker/heimdall:/config -e PUID=1000 -e PGID=1000 -e TZ=Asia/Shanghai linuxserver/heimdall:arm64v8-latest 注意：以上81为网页登陆端口，防止端口占用可修改为自己的端口 docker run -d --name=heimdall --restart=always -p 81:80 -p 442:443 -v /home/pi/docker/heimdall:/config -e PUID=1000 -e PGID=1000 -e TZ=Asia/Shanghai linuxserver/heimdall:arm64v8-latest 浏览器输入ip:81访问 为python2安装pip cd wget https://bootstrap.pypa.io/pip/2.7/get-pip.py sudo chmod +x get-pip.py sudo python get-pip.py python使用pip安装库时速度慢，可以使用别的源加快速度，操作如下： pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple ","date":"2022-11-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971/:0:1","tags":["开发板折腾"],"title":"树莓派操作指南1","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%971/"},{"categories":["树莓派","Linux","问题记录"],"content":"备份参数 pcm.!default { type asym playback.pcm { type plug slave.pcm \"hw:0,0\" } capture.pcm { type plug slave.pcm \"hw:1,0\" } 其中，hw:1,0表示card 1 device 0 plughw:2,0 ","date":"2022-09-20","objectID":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A3%B0%E5%8D%A1%E9%85%8D%E7%BD%AE/:0:1","tags":["开发板折腾"],"title":"树莓派声卡配置参数备份","uri":"https://naonano.gitee.io/zhb.gitee.io/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A3%B0%E5%8D%A1%E9%85%8D%E7%BD%AE/"},{"categories":[],"content":" 更新日志 2024-05-07 更新文章 2024-04-19 更新文章 2024-04-01 更新文章 2024-03-28 完善博客细节 2024-03-27 更新部分文章和个人简历 2024-03-12 更新部分文章和首页信息 2024-03-03 修改个人简历页面排版，内容 2024-03-02 修改所有文章排版 2024-03-01 优化博客样式，文章参数 2024-02-22 添加评论区、algolia搜索插件 2024-02-20 更新所有笔记格式为.md文件 2023-12-30 记录ubuntu相关问题解决 2023-12-22 记录打印机相关debug过程 2023-06-15 备份和记录操作笔记。 持续更新中….. ","date":"2000-12-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/about/:0:1","tags":[],"title":"Bin's Blog","uri":"https://naonano.gitee.io/zhb.gitee.io/about/"},{"categories":[],"content":" 其他…那个, 我还没想到要说啥# 假设有一些话, 只不过还没想到… … about\r","date":"2000-12-22","objectID":"https://naonano.gitee.io/zhb.gitee.io/about/:0:2","tags":[],"title":"Bin's Blog","uri":"https://naonano.gitee.io/zhb.gitee.io/about/"}]